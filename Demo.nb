(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    278713,       6139]
NotebookOptionsPosition[    269763,       5987]
NotebookOutlinePosition[    270163,       6003]
CellTagsIndexPosition[    270120,       6000]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["nano_calculate - Demo", "Title",
 CellChangeTimes->{{3.818180597290094*^9, 3.818180603677083*^9}, {
  3.8354999110971575`*^9, 3.8354999315435214`*^9}, {3.8355000678210883`*^9, 
  3.835500073888707*^9}},ExpressionUUID->"23ceaabb-2fe6-4675-a3d3-\
2c5244c503bd"],

Cell[CellGroupData[{

Cell["Clone/Fetch from GIT", "Subsection",
 CellChangeTimes->{{3.8181805766180897`*^9, 3.818180583299705*^9}, {
  3.820052630440099*^9, 
  3.82005263147138*^9}},ExpressionUUID->"41a19ad9-2730-4cca-816c-\
f4e236f891db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$localPath", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$HomeDirectory", ",", " ", "\"\<nano_calculate\>\""}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
   "$gitPath", " ", "=", " ", 
    "\"\<ssh://git@stash.wolfram.com:7999/~mikayele/ipbenchmarks.git\>\""}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"DirectoryQ", "[", "$localPath", "]"}]}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"RunProcess", "[", 
       RowBox[{"$SystemShell", ",", "\n", "\t\t", "All", ",", "\n", "\t\t", 
        RowBox[{
        "\"\<git clone \>\"", " ", "<>", " ", "$gitPath", " ", "<>", " ", 
         "\"\< \>\"", " ", "<>", "  ", "$localPath"}]}], "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}], ";"}], "\n"}], "\n", 
 RowBox[{"RunProcess", "[", 
  RowBox[{
  "$SystemShell", ",", "\n", "\t\t", "\"\<ExitCode\>\"", ",", "\n", "\t\t", 
   RowBox[{
   "\"\<cd \>\"", " ", "<>", " ", "$localPath", " ", "<>", "\n", "\t\t", 
    "\"\<\\n\>\"", " ", "<>", "\n", "\t\t", "\"\<git reset --hard\>\"", " ", "<>",
     " ", "\n", "\t\t", "\"\<\\n\>\"", " ", "<>", "\n", "\t\t", 
    "\"\<git fetch -f -t -p -a\>\"", " ", "<>", "\n", "\t\t", "\"\<\\n\>\"", 
    " ", "<>", "\n", "\t\t", "\"\<git pull\>\""}]}], "\n", "\t", 
  "]"}]}], "Code",
 CellChangeTimes->{{3.818179872341078*^9, 3.818179901909038*^9}, {
  3.818180075665756*^9, 3.818180166075089*^9}, {3.818180287945434*^9, 
  3.818180470649352*^9}, {3.818180550158963*^9, 3.818180555966096*^9}, {
  3.819783898668498*^9, 3.8197838992722883`*^9}, {3.8303307364650197`*^9, 
  3.830330761132362*^9}, {3.831097909380842*^9, 3.831097909863304*^9}, {
  3.831108014973242*^9, 3.831108016131021*^9}, {3.8355001498454275`*^9, 
  3.8355001545950356`*^9}},ExpressionUUID->"079ef288-33d6-4842-806f-\
e86f7f36c64e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Paclet load", "Subsection",
 CellChangeTimes->{{3.818180586223546*^9, 3.818180588182803*^9}, {
  3.8303308240107894`*^9, 3.8303308255448737`*^9}, {3.830330886251666*^9, 
  3.8303308931352973`*^9}},ExpressionUUID->"c486a2b6-c91b-497f-a705-\
678fe189873e"],

Cell[BoxData["Quit"], "Input",
 CellChangeTimes->{{3.831122277070697*^9, 3.8311222792569537`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"23718748-a5d3-4a4c-9f79-5c2248f2c60a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$HomeDirectory", ",", " ", "\"\<IPBenchmarks\>\""}], "}"}], 
    "]"}], "]"}], ";"}], "\n", 
 RowBox[{"Needs", "[", "\"\<IPBenchmarks`\>\"", "]"}]}], "Code",
 CellChangeTimes->{{3.818179931534802*^9, 3.818179963223084*^9}, {
   3.820119689534243*^9, 3.820119706048365*^9}, {3.820655461186468*^9, 
   3.820655462523719*^9}, {3.821248775874399*^9, 3.821248779945085*^9}, {
   3.821255508918889*^9, 3.8212555093937597`*^9}, {3.823060199107071*^9, 
   3.823060213370637*^9}, {3.8303307073509426`*^9, 3.8303307086412287`*^9}, {
   3.8310973726174097`*^9, 3.831097406988914*^9}, 3.831097917019998*^9, {
   3.83111609676429*^9, 3.8311160972082443`*^9}, 3.8311218811661716`*^9},
 CellLabel->"In[2]:=",ExpressionUUID->"506bf4c8-a2b6-43f5-bdea-a18e6325eb6d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Physical_Constants\\\\Constants.wl\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Physical_Constants\\\\Semiconductors.wl\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Quanum_Dots\\\\Eigensystems.wl\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Quanum_Dots\\\\Potentials.wl\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Wrapers\\\\Helpers.wl\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Wrapers\\\\Optics.wl\>\"", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "Get", "[", 
   "\"\<C:\\\\Users\\\\Acer\\\\Dropbox\\\\Article\\\\_Tool_\\\\Kernel\\\\\
Sources\\\\Wrapers\\\\Thermodynamics.wl\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8178878519845595`*^9, 3.8178878586423798`*^9}, {
   3.8182264514032917`*^9, 3.818226459832066*^9}, {3.8182265188363485`*^9, 
   3.818226542092576*^9}, {3.818249200571442*^9, 3.818249205493746*^9}, {
   3.8183421352666683`*^9, 3.818342139504634*^9}, {3.818742665906049*^9, 
   3.81874267430851*^9}, {3.818746525419201*^9, 3.818746529610012*^9}, 
   3.818785352223129*^9, {3.8247140681494174`*^9, 3.8247140737169533`*^9}, {
   3.8319716499990644`*^9, 3.8319717003585343`*^9}, {3.831988455729873*^9, 
   3.831988511961295*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"f9cd8b4c-f92f-4ea2-bc0c-5b05e1684bce"]
}, Closed]],

Cell[CellGroupData[{

Cell["Install/UnInstall Palette", "Subsection",
 CellChangeTimes->{{3.819974740130362*^9, 3.81997474419766*^9}, {
  3.830330830953286*^9, 3.8303308314601135`*^9}, {3.830330870900708*^9, 
  3.8303308981100364`*^9}},ExpressionUUID->"31ac0690-6b9e-407e-af46-\
3a5600e2ed62"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "InstallIPPalette"}]], "Input",
 CellChangeTimes->{{3.830330953990287*^9, 3.8303309580725203`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"840b45a3-5084-442d-b959-994b566cc72c"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InstallIPPalette[]\\n\\tinstalls created palette in \
$UserBaseDirectory.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"InstallIPPalette", "[", "]"}], ":=", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`result", "=", 
                    
                    RowBox[{"IPBenchmarks`Private`CreateIPPalette", "[", 
                    "]"}]}], ",", "IPBenchmarks`Private`path"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"NotebookSave", "[", 
                    RowBox[{"IPBenchmarks`Private`result", ",", 
                    RowBox[{"IPBenchmarks`Private`path", "=", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    
                    RowBox[{"$UserBaseDirectory", ",", "\"SystemFiles\"", ",",
                     "\"FrontEnd\"", ",", "\"Palettes\"", ",", 
                    "\"IPBenchmarks.nb\""}], "}"}], "]"}]}]}], "]"}], ";", 
                    
                    RowBox[{"NotebookClose", "[", 
                    "IPBenchmarks`Private`result", "]"}], ";", 
                    "IPBenchmarks`Private`path"}]}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"InstallIPPalette", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", "[", 
                    "\"IPBenchmarks`InstallIPPalette\"", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"IPBenchmarks`InstallIPPalette\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"InstallIPPalette[]\\n\\tinstalls created palette in \
$UserBaseDirectory.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "InstallIPPalette[]\n\tinstalls created palette in $UserBaseDirectory.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`InstallIPPalette, {
      IPBenchmarks`InstallIPPalette[] :> 
       Block[{IPBenchmarks`Private`result = 
          IPBenchmarks`Private`CreateIPPalette[], IPBenchmarks`Private`path}, 
         NotebookSave[
          IPBenchmarks`Private`result, IPBenchmarks`Private`path = 
           FileNameJoin[{$UserBaseDirectory, "SystemFiles", "FrontEnd", 
              "Palettes", "IPBenchmarks.nb"}]]; 
         NotebookClose[IPBenchmarks`Private`result]; 
         IPBenchmarks`Private`path], IPBenchmarks`InstallIPPalette[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`InstallIPPalette"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`InstallIPPalette"], False]]], "Output",
 CellChangeTimes->{
  3.830330959615737*^9, {3.83109788996325*^9, 3.8310978936177263`*^9}, 
   3.8310979348916893`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"db917689-3df0-48f6-8522-d92b37b5c5c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InstallIPPalette", "[", "]"}]], "Code",
 CellChangeTimes->{{3.818179931534802*^9, 3.818179963223084*^9}, {
   3.820119689534243*^9, 3.820119706048365*^9}, {3.820655461186468*^9, 
   3.820655462523719*^9}, {3.821248775874399*^9, 3.821248779945085*^9}, {
   3.821255508918889*^9, 3.8212555093937597`*^9}, {3.823060199107071*^9, 
   3.823060213370637*^9}, {3.8303307073509426`*^9, 3.8303307086412287`*^9}, 
   3.8303308591013637`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"72ba571e-05c1-4323-adae-0edc8626a73e"],

Cell[BoxData["\<\"C:\\\\Users\\\\Acer\\\\AppData\\\\Roaming\\\\Mathematica\\\\\
SystemFiles\\\\FrontEnd\\\\Palettes\\\\ipbenchmarks.nb\"\>"], "Output",
 CellChangeTimes->{
  3.831116115330814*^9, 3.8311219564426055`*^9, {3.831122407806462*^9, 
   3.8311224305611176`*^9}, 3.831122534437806*^9, 3.831122733212936*^9, 
   3.831124940741982*^9, 3.831132882812501*^9, 3.831133184899128*^9, 
   3.831192764088549*^9, 3.831192890297863*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"ca94a67b-da96-41aa-ae92-a972618133c2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "UnInstallIPPalette"}]], "Input",
 CellChangeTimes->{{3.83033096474016*^9, 3.8303309662869263`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"a3999c49-c651-4341-9eb2-9354ad9a9ea3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnInstallIPPalette[]\\n\\tun-installs palette from \
$UserBaseDirectory.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"UnInstallIPPalette", "[", "]"}], ":=", 
                    RowBox[{"Quiet", "[", 
                    RowBox[{"DeleteFile", "[", 
                    RowBox[{"FileNameJoin", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "$UserBaseDirectory", ",", "\<\"SystemFiles\"\>", 
                    ",", "\<\"FrontEnd\"\>", ",", "\<\"Palettes\"\>", 
                    ",", "\<\"IPBenchmarks.nb\"\>"}], "}"}], "]"}], "]"}], 
                    "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"UnInstallIPPalette", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`UnInstallIPPalette\"\>", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"IPBenchmarks`UnInstallIPPalette\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"UnInstallIPPalette[]\\n\\tun-installs palette from \
$UserBaseDirectory.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "UnInstallIPPalette[]\n\tun-installs palette from $UserBaseDirectory.", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`UnInstallIPPalette, {
      IPBenchmarks`UnInstallIPPalette[] :> Quiet[
         DeleteFile[
          
          FileNameJoin[{$UserBaseDirectory, "SystemFiles", "FrontEnd", 
            "Palettes", "IPBenchmarks.nb"}]]], IPBenchmarks`UnInstallIPPalette[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`UnInstallIPPalette"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`UnInstallIPPalette"], False]]], "Output",
 CellChangeTimes->{3.8303309670194173`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"73f7d95c-eb54-47af-ba0a-a8a408906241"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"UnInstallIPPalette", "[", "]"}]], "Code",
 CellChangeTimes->{{3.818179931534802*^9, 3.818179963223084*^9}, {
   3.820119689534243*^9, 3.820119706048365*^9}, {3.820655461186468*^9, 
   3.820655462523719*^9}, {3.821248775874399*^9, 3.821248779945085*^9}, {
   3.821255508918889*^9, 3.8212555093937597`*^9}, {3.823060199107071*^9, 
   3.823060213370637*^9}, {3.8303307073509426`*^9, 3.8303307086412287`*^9}, 
   3.8303308649097195`*^9},
 CellLabel->"In[4]:=",ExpressionUUID->"ba12563d-ab13-414e-a68a-ed42f8532b98"]
}, Closed]],

Cell[CellGroupData[{

Cell["README", "Subsection",
 CellChangeTimes->{{3.819783992907288*^9, 
  3.8197839947020397`*^9}},ExpressionUUID->"be803c3c-b252-4078-8693-\
a897edd956ca"],

Cell[BoxData[
 RowBox[{"SystemOpen", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$localPath", ",", "\"\<README.pdf\>\""}], "}"}], "]"}], 
  "]"}]], "Code",
 CellChangeTimes->{{3.818179931534802*^9, 3.818179963223084*^9}, {
   3.820119689534243*^9, 3.820119706048365*^9}, {3.820655461186468*^9, 
   3.820655462523719*^9}, {3.821248775874399*^9, 3.821248779945085*^9}, {
   3.821255508918889*^9, 3.8212555093937597`*^9}, {3.823060199107071*^9, 
   3.823060213370637*^9}, {3.8303307073509426`*^9, 3.8303307086412287`*^9}, 
   3.8303308591013637`*^9, 3.8303310110241766`*^9, {3.830331092287318*^9, 
   3.830331113698059*^9}},ExpressionUUID->"4ebc3216-5bd1-430d-90ad-\
9f6f824b4417"]
}, Closed]],

Cell[CellGroupData[{

Cell["Exposed Functionality", "Subsection",
 CellChangeTimes->{{3.8181806125708303`*^9, 3.818180612924786*^9}, {
  3.819783981462784*^9, 
  3.819783986439701*^9}},ExpressionUUID->"4d7dc469-24f9-46bd-9aea-\
f3049448593f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "IPBenchmarks`*"}]], "Input",
 CellChangeTimes->{{3.818179971422517*^9, 3.818179973101198*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"685e080a-23b5-4e13-9adc-42f8d05da451"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["IPBenchmarks`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              StyleBox["IPBenchmarks`", "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 
                 StyleBox["DatasetAllFunctionMeanTiming", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "DatasetAllFunctionMeanTiming", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FunctionSummary", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionSummary", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotColorSpaceDependency", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "PlotColorSpaceDependency", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["FunctionAutomaticIssuesSummaryDifference", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionAutomaticIssuesSummaryDifference", 
                    "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["FunctionSummaryDifference", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionSummaryDifference", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["PlotImageTypeDependency", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "PlotImageTypeDependency", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["FunctionBenchmarkTimingsDifference", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionBenchmarkTimingsDifference", "IPBenchmarks`"}, 
                   False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["FunctionTimeCharts", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionTimeCharts", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["PlotSizeAndMemoryDependency", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "PlotSizeAndMemoryDependency", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["FunctionPropertyPreserveCluster", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionPropertyPreserveCluster", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["InstallIPPalette", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "InstallIPPalette", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["UnInstallIPPalette", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "UnInstallIPPalette", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 
                 StyleBox["FunctionPropertyPreserveDataset", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "FunctionPropertyPreserveDataset", "IPBenchmarks`"}, False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], 
                ButtonBox[
                 
                 StyleBox["PlotChannelInterleavingDependency", 
                  "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-d588caca-e519-4686-b931-e3b7af7a1510", {
                   "PlotChannelInterleavingDependency", "IPBenchmarks`"}, 
                   False},
                 ButtonNote->"IPBenchmarks`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.31666666666666665`]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.83031776026047*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"1a257982-e652-4368-a06e-ac7405f00f24"]
}, Open  ]],

Cell[CellGroupData[{

Cell["DatasetAllFunctionMeanTiming", "Subsubsection",
 CellChangeTimes->{
  3.819784768182159*^9},ExpressionUUID->"3cb26fe1-76c8-4e73-b13b-\
64effb46c0c3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DatasetAllFunctionMeanTiming"}]], "Input",
 CellChangeTimes->{{3.819784770418543*^9, 3.8197847705238647`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"ff3d52e8-50cb-4215-ab07-4b08b55d14a0"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DatasetAllFunctionMeanTiming[\\!\\(\\*StyleBox[\\\"\
numberOfDimensions\\\", \\\"TI\\\"]\\)]\\n\\tmean time for all functions for \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)-dimensional case \
as an Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"numberOfDimensions\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or \
3\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"DatasetAllFunctionMeanTiming", "[", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", ":", 
                    RowBox[{"2", "|", "3"}]}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    
                    RowBox[{"OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"Block", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"IPBenchmarks`Private`cachedList", ",", 
                    "IPBenchmarks`Private`tmp"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"IPBenchmarks`Private`cachedList", "=", 
                    
                    RowBox[{"IPBenchmarks`Private`getFunctionsFromCache", "[",
                     "]"}]}], ")"}], "===", 
                    RowBox[{"Association", "[", "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"Throw", "[", "$Failed", "]"}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`result", "=", 
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`key", ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`tmp", "=", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Function\"", "\[Rule]", "#1"}], ",", 
                    RowBox[{"\"Time\"", "\[Rule]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`tmp", "=", 
                    RowBox[{"Lookup", "[", 
                    
                    RowBox[{"#2", ",", 
                    "IPBenchmarks`Private`numberOfDimensions"}], "]"}]}], ",",
                     "\"Time\""}], "]"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MissingQ", "[", 
                    RowBox[{"IPBenchmarks`Private`tmp", "=", 
                    RowBox[{"IPBenchmarks`Private`tmp", "[", 
                    RowBox[{"\"Time\"", ",", "IPBenchmarks`Private`key"}], 
                    "]"}]}], "]"}]}], ",", 
                    RowBox[{"Quantity", "[", 
                    RowBox[{"IPBenchmarks`Private`tmp", ",", "\"Seconds\""}], 
                    "]"}], ",", 
                    RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], 
                    "]"}], ",", 
                    RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}]}], 
                    "]"}]}], ",", 
                    RowBox[{"\"Signature\"", "\[Rule]", 
                    RowBox[{"IPBenchmarks`Private`$$listOfAllFunctions", "[", 
                    RowBox[{"#1", ",", "\"Interface\""}], "]"}]}]}], "]"}], 
                    "&"}], ",", "IPBenchmarks`Private`cachedList"}], "]"}]}], 
                    ";", 
                    
                    RowBox[{"IPBenchmarks`Private`key", "\[Rule]", 
                    "IPBenchmarks`Private`tmp"}]}]}], "]"}], "/@", 
                    "IPBenchmarks`Private`$$benchmarkTypes"}], "]"}]}], ";", 
                    RowBox[{"PrependTo", "[", 
                    RowBox[{"IPBenchmarks`Private`result", ",", 
                    RowBox[{"\"Mean\"", "\[Rule]", 
                    RowBox[{"KeyValueMap", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Association", "[", 
                    RowBox[{
                    RowBox[{"\"Function\"", "\[Rule]", "#1"}], ",", 
                    RowBox[{"\"Time\"", "\[Rule]", 
                    RowBox[{"Quantity", "[", 
                    RowBox[{"#2", ",", "\"Seconds\""}], "]"}]}], ",", 
                    RowBox[{"\"Thread ratio (4vs1)\"", "\[Rule]", 
                    RowBox[{"With", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"IPBenchmarks`Private`nDResult", "=", 
                    RowBox[{"IPBenchmarks`Private`cachedList", "[", 
                    
                    RowBox[{"#1", ",", 
                    "IPBenchmarks`Private`numberOfDimensions", ",", 
                    "\"Threads\""}], "]"}]}], "}"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    
                    RowBox[{"MissingQ", "[", "IPBenchmarks`Private`nDResult", 
                    "]"}], ",", 
                    RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}], ",", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"Divide", "@@", 
                    RowBox[{"Reverse", "[", 
                    
                    RowBox[{"Values", "[", "IPBenchmarks`Private`nDResult", 
                    "]"}], "]"}]}], ",", "2"}], "]"}]}], "]"}]}], "]"}]}], 
                    ",", 
                    RowBox[{"\"Signature\"", "\[Rule]", 
                    RowBox[{"IPBenchmarks`Private`$$listOfAllFunctions", "[", 
                    RowBox[{"#1", ",", "\"Interface\""}], "]"}]}]}], "]"}], 
                    "&"}], ",", 
                    RowBox[{"Mean", "/@", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    
                    RowBox[{"IPBenchmarks`Private`cachedList", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", 
                    
                    RowBox[{"Key", "[", 
                    "IPBenchmarks`Private`numberOfDimensions", "]"}], ",", 
                    "\"Time\""}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"!", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"Values", "[", "#1", "]"}], ",", 
                    RowBox[{"Missing", "[", "___", "]"}]}], "]"}]}], "&"}]}], 
                    "]"}]}]}], "]"}]}]}], "]"}], ";", 
                    RowBox[{"TabView", "[", 
                    RowBox[{"Dataset", "/@", "IPBenchmarks`Private`result"}], 
                    "]"}]}]}], "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"DatasetAllFunctionMeanTiming", "[", "___", "]"}],
                     ":=", 
                    
                    RowBox[{
                    "IPBenchmarks`Private`createFailureSignature", "[", 
                    "\"IPBenchmarks`DatasetAllFunctionMeanTiming\"", 
                    "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`DatasetAllFunctionMeanTiming\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"DatasetAllFunctionMeanTiming[\\!\\(\\*StyleBox[\\\"\
numberOfDimensions\\\", \\\"TI\\\"]\\)]\\n\\tmean time for all functions for \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)-dimensional case \
as an Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"numberOfDimensions\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or \
3\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "DatasetAllFunctionMeanTiming[\!\(\*StyleBox[\"numberOfDimensions\", \"TI\
\"]\)]\n\tmean time for all functions for \!\(\*StyleBox[\"numberOfDimensions\
\", \"TI\"]\)-dimensional case as an Dataset object.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"\
numberOfDimensions\\\\\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"2 or \
3\\\"\"}}, Rule[GridBoxAlignment, List[Rule[\"Columns\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\"Columns\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\"Rows\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\"Columns\", List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> 
    None, "OwnValues" -> None, "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`DatasetAllFunctionMeanTiming, {
      IPBenchmarks`DatasetAllFunctionMeanTiming[
         Pattern[IPBenchmarks`Private`numberOfDimensions, 
          Alternatives[2, 3]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Catch[
         Block[{IPBenchmarks`Private`cachedList, IPBenchmarks`Private`tmp}, 
          If[(IPBenchmarks`Private`cachedList = 
             IPBenchmarks`Private`getFunctionsFromCache[]) === Association[], 
            Throw[$Failed]; Null]; IPBenchmarks`Private`result = Association[
             Map[
              Function[
              IPBenchmarks`Private`key, 
               IPBenchmarks`Private`tmp = 
                KeyValueMap[Association["Function" -> #, "Time" -> If[
                    KeyExistsQ[
                    IPBenchmarks`Private`tmp = 
                    Lookup[#2, IPBenchmarks`Private`numberOfDimensions], 
                    "Time"], 
                    If[
                    Not[
                    MissingQ[
                    IPBenchmarks`Private`tmp = 
                    IPBenchmarks`Private`tmp[
                    "Time", IPBenchmarks`Private`key]]], 
                    Quantity[IPBenchmarks`Private`tmp, "Seconds"], 
                    Missing["NotAvailable"]], 
                    Missing["NotAvailable"]], "Signature" -> 
                   IPBenchmarks`Private`$$listOfAllFunctions[#, 
                    "Interface"]]& , IPBenchmarks`Private`cachedList]; 
               IPBenchmarks`Private`key -> IPBenchmarks`Private`tmp], 
              IPBenchmarks`Private`$$benchmarkTypes]]; 
          PrependTo[
           IPBenchmarks`Private`result, "Mean" -> 
            KeyValueMap[
             Association[
              "Function" -> #, "Time" -> Quantity[#2, "Seconds"], 
               "Thread ratio (4vs1)" -> 
               With[{
                 IPBenchmarks`Private`nDResult = 
                  IPBenchmarks`Private`cachedList[#, 
                    IPBenchmarks`Private`numberOfDimensions, "Threads"]}, 
                 If[
                  MissingQ[IPBenchmarks`Private`nDResult], 
                  Missing["NotAvailable"], 
                  NumberForm[
                   Apply[Divide, 
                    Reverse[
                    Values[IPBenchmarks`Private`nDResult]]], 2]]], 
               "Signature" -> 
               IPBenchmarks`Private`$$listOfAllFunctions[#, "Interface"]]& , 
              Map[Mean, 
               Select[
                Part[IPBenchmarks`Private`cachedList, All, 
                 Key[IPBenchmarks`Private`numberOfDimensions], "Time"], Not[
                 MemberQ[
                  Values[#], 
                  Missing[
                   BlankNullSequence[]]]]& ]]]]; TabView[
            Map[Dataset, IPBenchmarks`Private`result]]]], 
       IPBenchmarks`DatasetAllFunctionMeanTiming[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`createFailureSignature[
        "IPBenchmarks`DatasetAllFunctionMeanTiming"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`DatasetAllFunctionMeanTiming"], False]]], "Output",
 CellChangeTimes->{3.819784770937789*^9, 3.823757449557123*^9},
 CellLabel->
  "Out[125]=",ExpressionUUID->"55c8e62a-d9ab-402e-9974-f210f88ae6c4"]
}, Open  ]],

Cell["\<\
The function returns a dynamic grid that contains timings for all functions \
based on 4 benchmarks.\
\>", "Text",
 CellChangeTimes->{
  3.81978478729493*^9},ExpressionUUID->"58554f97-adbf-4e87-b9a5-7cd4428c6009"],

Cell[BoxData[
 RowBox[{"DatasetAllFunctionMeanTiming", "[", "2", "]"}]], "Input",
 CellChangeTimes->{{3.819784792074716*^9, 3.819784792619336*^9}},
 CellLabel->
  "In[126]:=",ExpressionUUID->"3cadd6e2-49bf-4c7c-b881-48e906f38b62"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionPropertyPreserveDataset", "Subsubsection",
 CellChangeTimes->{{3.823064775740802*^9, 
  3.823064779067978*^9}},ExpressionUUID->"284f5f53-5683-4835-a983-\
2b6b1ff65da0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionPropertyPreserveDataset"}]], "Input",
 CellChangeTimes->{{3.823064784832193*^9, 3.823064784991294*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"17671804-87cf-481f-a95b-5adc324436c2"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionPropertyPreserveDataset[\\!\\(\\*StyleBox[\\\
\"imageProperty\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"functions\\\", \
\\\"TI\\\"]\\)]\\n\\tgives dataset of image properties changes for ImageType \
and ColorSpace \
cases.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\
\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"imageProperty\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"ImageType\\\\\\\\\\\\\\\" or \
\\\\\\\\\\\\\\\"ColorSpace\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functions\\\\\
\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"optional argument to specify functions of interest\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionPropertyPreserveDataset", "[", 
                    "IPBenchmarks`Private`imageProperty_", "]"}], ":=", 
                    RowBox[{"FunctionPropertyPreserveDataset", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", "All", ",", 
                    "2"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionPropertyPreserveDataset", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty_", ",", 
                    "IPBenchmarks`Private`functions_"}], "]"}], ":=", 
                    RowBox[{"FunctionPropertyPreserveDataset", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", 
                    "IPBenchmarks`Private`functions", ",", "2"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionPropertyPreserveDataset", "[", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`imageProperty", ":", 
                    
                    RowBox[{"\<\"ImageType\"\>", 
                    "|", "\<\"ColorSpace\"\>"}]}], ",", 
                    "IPBenchmarks`Private`functions_", ",", 
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", ":", 
                    RowBox[{"2", "|", "3"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`\
constructFunctionPropertyPreserveDataset", "[", 
                    "IPBenchmarks`Private`numberOfDimensions", "]"}], "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", 
                    "IPBenchmarks`Private`functions"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionPropertyPreserveDataset", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`DatasetFunctionPropertyPreserve\"\>\
", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`FunctionPropertyPreserveDataset\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionPropertyPreserveDataset[\\!\\(\\*StyleBox[\\\
\"imageProperty\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"functions\\\", \
\\\"TI\\\"]\\)]\\n\\tgives dataset of image properties changes for ImageType \
and ColorSpace \
cases.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\
\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"imageProperty\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"ImageType\\\\\\\\\\\\\\\" or \
\\\\\\\\\\\\\\\"ColorSpace\\\\\\\\\\\\\\\"\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functions\\\\\
\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"optional argument to specify functions of interest\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionPropertyPreserveDataset[\!\(\*StyleBox[\"imageProperty\", \
\"TI\"]\), \!\(\*StyleBox[\"functions\", \"TI\"]\)]\n\tgives dataset of image \
properties changes for ImageType and ColorSpace cases.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"imageProperty\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"\\\\\\\"ImageType\\\\\\\" or \\\\\
\\\"ColorSpace\\\\\\\"\\\"\"}, \
{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"functions\\\\\\\", \\\\\\\"TI\\\\\\\"]\
\\\\)\\\"\", \"\\\"optional argument to specify functions of \
interest\\\"\"}}, Rule[GridBoxAlignment, List[Rule[\"Columns\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\"Columns\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionPropertyPreserveDataset, {
      IPBenchmarks`FunctionPropertyPreserveDataset[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Blank[]]] :> 
       IPBenchmarks`FunctionPropertyPreserveDataset[
        IPBenchmarks`Private`imageProperty, All, 2], 
       IPBenchmarks`FunctionPropertyPreserveDataset[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Blank[]], 
         Pattern[IPBenchmarks`Private`functions, 
          Blank[]]] :> 
       IPBenchmarks`FunctionPropertyPreserveDataset[
        IPBenchmarks`Private`imageProperty, IPBenchmarks`Private`functions, 
         2], IPBenchmarks`FunctionPropertyPreserveDataset[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Alternatives["ImageType", "ColorSpace"]], 
         Pattern[IPBenchmarks`Private`functions, 
          Blank[]], 
         Pattern[IPBenchmarks`Private`numberOfDimensions, 
          Alternatives[2, 3]]] :> 
       IPBenchmarks`Private`constructFunctionPropertyPreserveDataset[
        IPBenchmarks`Private`numberOfDimensions][
        IPBenchmarks`Private`imageProperty, IPBenchmarks`Private`functions], 
       IPBenchmarks`FunctionPropertyPreserveDataset[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`DatasetFunctionPropertyPreserve"]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionPropertyPreserveDataset"], False]]], "Output",
 CellChangeTimes->{3.8303177744095917`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"ba2deae0-b17b-4544-a794-3bd0748a387a"]
}, Open  ]],

Cell["\<\
The function returns a grid with image properties changes for ImageType and \
ColorSpace cases based on 4 benchmarks.\
\>", "Text",
 CellChangeTimes->{
  3.81978478729493*^9, {3.8303185774072537`*^9, 
   3.830318603983553*^9}},ExpressionUUID->"c5ba2e56-dcd4-47a1-a55f-\
30d332f58c7b"],

Cell[BoxData[
 RowBox[{"FunctionPropertyPreserveDataset", "[", 
  RowBox[{"\"\<ColorSpace\>\"", ",", " ", "AlphaChannel"}], "]"}]], "Input",
 CellChangeTimes->{{3.8230647965216618`*^9, 3.823064820942645*^9}, {
  3.823083255930738*^9, 3.823083277468082*^9}, {3.8230835445728903`*^9, 
  3.8230835573605843`*^9}, {3.823083633767438*^9, 3.823083665852723*^9}, {
  3.823083938009844*^9, 3.823083943865279*^9}, {3.82368584672233*^9, 
  3.82368585369272*^9}, {3.8237550187431593`*^9, 3.8237550204130707`*^9}, {
  3.823755916489167*^9, 3.82375591703588*^9}, {3.823920244932416*^9, 
  3.823920255532647*^9}, {3.823932150529999*^9, 3.823932152409507*^9}, {
  3.823933668248516*^9, 3.823933675621252*^9}, {3.823933743909708*^9, 
  3.823933746519762*^9}, {3.8303311743035436`*^9, 3.8303311747105517`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c5896053-1bd9-41e7-808f-89370848b02c"],

Cell[BoxData[
 RowBox[{"FunctionPropertyPreserveDataset", "[", 
  RowBox[{"\"\<ImageType\>\"", ",", " ", "AlphaChannel"}], "]"}]], "Input",
 CellChangeTimes->{{3.823590214502861*^9, 3.823590251620801*^9}, {
  3.823590359537427*^9, 3.823590365723537*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"01e7d36c-4624-4f43-8bcd-975d8c6a17bc"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionPropertyPreserveCluster", "Subsubsection",
 CellChangeTimes->{
  3.8230647611758204`*^9},ExpressionUUID->"a75f5612-5269-40b6-a7c3-\
70b9ff676780"],

Cell[CellGroupData[{

Cell["ColorSpace update suggestions:", "Item",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329039815085*^9}, {
  3.823930858943783*^9, 3.823930867251555*^9}, {3.823931170872107*^9, 
  3.823931172584206*^9}},ExpressionUUID->"fb8e250f-c0a0-45de-bfc2-\
844a263945d7"],

Cell[CellGroupData[{

Cell[TextData[{
 "ImageExposureCombine - ",
 StyleBox["RGB -> something else",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352620245*^9, 3.823329352621274*^9}, {3.823931159381934*^9, 
  3.823931161490944*^9}},ExpressionUUID->"a3946ffb-fb42-490f-b6bf-\
1db25de02a59"],

Cell[TextData[{
 "GradientFilter | GradientOrientationFilter - ",
 StyleBox["maybe to Automatic vs preserving grayscale",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.823329513089167*^9, 
  3.823329513090139*^9}},ExpressionUUID->"9c154984-59ec-41c9-b122-\
bc39dd7c4e7d"],

Cell[TextData[{
 "Darker | Lighter | ReplaceImageValue | ReplacePixelValue | \
InverseImagePyramid - ",
 StyleBox["maybe always preserve",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330086758829*^9, 3.8233300867595778`*^9}, {3.8233302170705557`*^9, 
  3.823330217795874*^9}},ExpressionUUID->"1e6cffa9-de2d-460d-ace6-\
2149afd5314f"],

Cell[TextData[{
 "Image3DProjection | ImageRecolor - ",
 StyleBox["maybe more color-spaces should be handled",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931577917507*^9, 
  3.8239315779231462`*^9}},ExpressionUUID->"a5a15b70-8869-4aab-b0fa-\
b083691c1b11"]
}, Open  ]],

Cell["ImageType", "Item",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 
  3.8239315834153137`*^9}},ExpressionUUID->"78820272-6dff-4894-b216-\
af364d79bdf3"],

Cell[CellGroupData[{

Cell["Check for evaluations", "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 
  3.8239315908717813`*^9}},ExpressionUUID->"b610691d-5b7f-403f-b3a4-\
52d721f98d16"],

Cell["\<\
Add separate clusters for those cases that take ImageType as an argument\
\>", "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931916904709*^9, 3.8239319169066143`*^9}, {3.823933495349753*^9, 
  3.82393349535012*^9}},ExpressionUUID->"992e9f2d-b909-4d4e-ad24-\
f2b3043ab736"],

Cell["PeronaMalikFilter -> Check", "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931916904709*^9, 3.8239319169066143`*^9}, {3.823933495938089*^9, 
  3.8239334976824627`*^9}},ExpressionUUID->"9072c936-56d4-41a3-961b-\
38d0d0559ba1"],

Cell[TextData[{
 "Real32 && Real64 - ",
 StyleBox["Real64 should always be preserved",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.823932189027864*^9, 3.823932189029978*^9}, {
  3.823932250928131*^9, 3.823932290260086*^9}, {3.823932446497027*^9, 
  3.823932448663233*^9}},ExpressionUUID->"4e389766-c834-4312-bc56-\
db99a09b1fa2"],

Cell[CellGroupData[{

Cell[TextData[{
 "DistanceTransform, SkeletonTransform",
 StyleBox[" - maybe always Real32",
  FontSlant->"Italic"]
}], "Subsubitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.823932189027864*^9, 3.823932189029978*^9}, {
  3.823932250928131*^9, 3.823932290260086*^9}, {3.823932446497027*^9, 
  3.823932462680893*^9}, {3.8239325499616957`*^9, 
  3.8239325744799767`*^9}},ExpressionUUID->"d79ea2e4-d319-4344-8f78-\
bb549c5b7050"],

Cell[TextData[{
 "ImageDeconvolve - ",
 StyleBox["preserve or behave as for ImageConvolve",
  FontSlant->"Italic"]
}], "Subsubitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932424620851*^9, 
  3.8239324246227627`*^9}},ExpressionUUID->"01cea019-a42f-44a2-8e65-\
e0211f05efe4"],

Cell[TextData[{
 "ImageAccumulate - ",
 StyleBox["maybe always Real64",
  FontSlant->"Italic"]
}], "Subsubitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932425573723*^9, 3.8239324381412354`*^9}, {3.823932665540485*^9, 
  3.823932665542397*^9}, {3.823933410682938*^9, 
  3.823933410689197*^9}},ExpressionUUID->"1105bf6e-520f-4fb5-9a5e-\
1f8bd5b3229f"]
}, Open  ]],

Cell["Bit -> Real32 | Real64 :> Byte", "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932425573723*^9, 3.8239324381412354`*^9}, {3.823932665540485*^9, 
  3.823932665542397*^9}, {3.823933417104918*^9, 
  3.823933433422233*^9}},ExpressionUUID->"c08b42bb-a939-4b30-955f-\
7724d959939d"],

Cell[TextData[{
 "Preserved (Bit ->$Failed) - ",
 StyleBox["should be preserved",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932425573723*^9, 3.8239324381412354`*^9}, {3.8239326680855227`*^9, 
  3.823932730334786*^9}, {3.823932782433009*^9, 3.8239327885667562`*^9}, {
  3.823933021535927*^9, 
  3.8239330215408783`*^9}},ExpressionUUID->"4abcdb55-5648-4e4f-8e34-\
a55afef0fd3e"],

Cell[TextData[{
 "ReplaceImageValue | ReplacePixelValue - ",
 StyleBox["have a manual look at the behavior",
  FontSlant->"Italic"]
}], "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932425573723*^9, 3.8239324381412354`*^9}, {3.8239326680855227`*^9, 
  3.823932730334786*^9}, {3.823932782433009*^9, 3.8239327885667562`*^9}, {
  3.823933022014928*^9, 3.823933041440823*^9}, {3.823933256498945*^9, 
  3.823933256501731*^9}},ExpressionUUID->"341bcb06-fcb3-41e6-aec1-\
b52ed8628b75"],

Cell["Thumbnail - RGB & Byte", "Subitem",
 CellChangeTimes->{{3.823328763016014*^9, 3.823328768619327*^9}, {
  3.8233288824010677`*^9, 3.823328886460146*^9}, {3.823328916760092*^9, 
  3.823328919486903*^9}, {3.8233290240165462`*^9, 3.823329063566033*^9}, {
  3.823329352961446*^9, 3.8233293883299026`*^9}, {3.8233295135083313`*^9, 
  3.823329527628345*^9}, {3.8233297119389887`*^9, 3.8233297167773*^9}, {
  3.823330088312315*^9, 3.82333011414542*^9}, {3.8233302099143*^9, 
  3.823330209915213*^9}, {3.823931579563549*^9, 3.823931608205995*^9}, {
  3.823931918477953*^9, 3.823931934533375*^9}, {3.8239320576152973`*^9, 
  3.823932070046348*^9}, {3.8239321906509123`*^9, 3.823932216140884*^9}, {
  3.823932425573723*^9, 3.8239324381412354`*^9}, {3.8239326680855227`*^9, 
  3.823932730334786*^9}, {3.823932782433009*^9, 3.8239327885667562`*^9}, {
  3.823933022014928*^9, 3.823933041440823*^9}, {3.823933257373219*^9, 
  3.8239332694065247`*^9}},ExpressionUUID->"446702e4-2c5e-454c-b260-\
9cefedf39c88"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionPropertyPreserveCluster"}]], "Input",
 CellChangeTimes->{{3.8303186272163196`*^9, 3.8303186277162867`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"d5f525ef-494f-4d6e-af07-1f2627630785"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionPropertyPreserveCluster[\\!\\(\\*StyleBox[\\\
\"imageProperty\\\", \\\"TI\\\"]\\)]\\n\\tgives dataset of image properties \
changes clustered for ImageType and ColorSpace \
cases.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\
\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"imageProperty\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"ImageType\\\\\\\\\\\\\\\" or \
\\\\\\\\\\\\\\\"ColorSpace\\\\\\\\\\\\\\\"\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FunctionPropertyPreserveCluster", "[", 
                    RowBox[{"IPBenchmarks`Private`imageProperty", ":", 
                    
                    RowBox[{"\<\"ImageType\"\>", 
                    "|", "\<\"ColorSpace\"\>"}]}], "]"}], ":=", 
                    RowBox[{"FunctionPropertyPreserveCluster", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", "All", ",", 
                    "2"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionPropertyPreserveCluster", "[", 
                    "IPBenchmarks`Private`imageProperty_", "]"}], ":=", 
                    RowBox[{"FunctionPropertyPreserveCluster", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", "All", ",", 
                    "2"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionPropertyPreserveCluster", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty_", ",", 
                    "IPBenchmarks`Private`functions_", ",", 
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", ":", 
                    RowBox[{"2", "|", "3"}]}]}], "]"}], ":=", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`constructManipulateForClusters", 
                    "[", "IPBenchmarks`Private`numberOfDimensions", "]"}], 
                    "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`\
constructFunctionPropertyPreserveCluster", "[", 
                    "IPBenchmarks`Private`numberOfDimensions", "]"}], "[", 
                    RowBox[{
                    "IPBenchmarks`Private`imageProperty", ",", 
                    "IPBenchmarks`Private`functions"}], "]"}], ",", 
                    "IPBenchmarks`Private`imageProperty"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionPropertyPreserveCluster", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`ColorSpaceCluster\"\>", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`FunctionPropertyPreserveCluster\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionPropertyPreserveCluster[\\!\\(\\*StyleBox[\\\
\"imageProperty\\\", \\\"TI\\\"]\\)]\\n\\tgives dataset of image properties \
changes clustered for ImageType and ColorSpace \
cases.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\
\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"imageProperty\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"\\\\\\\\\\\\\\\"ImageType\\\\\\\\\\\\\\\" or \
\\\\\\\\\\\\\\\"ColorSpace\\\\\\\\\\\\\\\"\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionPropertyPreserveCluster[\!\(\*StyleBox[\"imageProperty\", \
\"TI\"]\)]\n\tgives dataset of image properties changes clustered for \
ImageType and ColorSpace cases.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"imageProperty\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"\\\\\\\"ImageType\\\\\\\" or \\\\\
\\\"ColorSpace\\\\\\\"\\\"\"}}, Rule[GridBoxAlignment, List[Rule[\"Columns\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\"Columns\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionPropertyPreserveCluster, {
      IPBenchmarks`FunctionPropertyPreserveCluster[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Alternatives["ImageType", "ColorSpace"]]] :> 
       IPBenchmarks`FunctionPropertyPreserveCluster[
        IPBenchmarks`Private`imageProperty, All, 2], 
       IPBenchmarks`FunctionPropertyPreserveCluster[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Blank[]]] :> 
       IPBenchmarks`FunctionPropertyPreserveCluster[
        IPBenchmarks`Private`imageProperty, All, 2], 
       IPBenchmarks`FunctionPropertyPreserveCluster[
         Pattern[IPBenchmarks`Private`imageProperty, 
          Blank[]], 
         Pattern[IPBenchmarks`Private`functions, 
          Blank[]], 
         Pattern[IPBenchmarks`Private`numberOfDimensions, 
          Alternatives[2, 3]]] :> 
       IPBenchmarks`Private`constructManipulateForClusters[
        IPBenchmarks`Private`numberOfDimensions][
         IPBenchmarks`Private`constructFunctionPropertyPreserveCluster[
         IPBenchmarks`Private`numberOfDimensions][
         IPBenchmarks`Private`imageProperty, IPBenchmarks`Private`functions], 
         IPBenchmarks`Private`imageProperty], 
       IPBenchmarks`FunctionPropertyPreserveCluster[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`ColorSpaceCluster"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionPropertyPreserveCluster"], False]]], "Output",
 CellChangeTimes->{3.830318634137719*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"e42006ed-4637-460e-b005-bc39feeb8c82"]
}, Open  ]],

Cell["\<\
The function returns a clustered grid with image properties changes for \
ImageType and ColorSpace cases based on 4 benchmarks.\
\>", "Text",
 CellChangeTimes->{
  3.81978478729493*^9, {3.8303185774072537`*^9, 3.830318603983553*^9}, {
   3.8303186444183254`*^9, 
   3.8303186471212034`*^9}},ExpressionUUID->"cd7c7df4-487a-42ca-8c89-\
8257b1e3165e"],

Cell[BoxData[
 RowBox[{"FunctionPropertyPreserveCluster", "[", "\"\<ColorSpace\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8273114272133636`*^9, 3.827311435521968*^9}, {
   3.828503708829048*^9, 3.828503714733864*^9}, {3.828503761145095*^9, 
   3.828503786531109*^9}, {3.828504028844633*^9, 3.828504030178973*^9}, 
   3.83031862198234*^9, 3.8303311978688183`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"54cec25a-5891-4ad2-a3a6-99b6d7a7b27f"],

Cell[BoxData[
 RowBox[{"FunctionPropertyPreserveCluster", "[", "\"\<ImageType\>\"", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8303312117050633`*^9, 3.8303312133459167`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"ac780785-c7e7-48be-ab33-671572832262"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionTimeCharts", "Subsubsection",
 CellChangeTimes->{{3.819784612758767*^9, 3.819784617181883*^9}, 
   3.8197846512345953`*^9, {3.8302765484340715`*^9, 
   3.8302765661602774`*^9}},ExpressionUUID->"1dd9ec98-f517-4b36-bcbc-\
75917617d4f9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionTimeCharts"}]], "Input",
 CellChangeTimes->{{3.819784651749516*^9, 3.819784651900166*^9}, 
   3.830318333705305*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"9163864b-f69f-42cd-827e-d4f7a1a0eaad"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionTimeCharts[\\!\\(\\*StyleBox[\\\"\
functionName\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \
\\\"TI\\\"]\\)]\\n\\tcombination of all the charts for \
\\!\\(\\*StyleBox[\\\"functionName\\\", \\\"TI\\\"]\\) for \\!\\(\\*StyleBox[\
\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)-dimensional case as a column of \
two rows.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\
\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functionName\\\\\\\\\\\\\\\", \\\\\\\
\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the name of \
ImageProcessing function as a symbol\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"numberOfDimensions\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or \
3\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\\n\\nFollowing options are supported:\\n\
\[Bullet] \\\"Normalize\\\" - normalize time and memory values with respect \
to pixel count\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FunctionTimeCharts", "[", 
                    RowBox[{"IPBenchmarks`Private`functionName_Symbol", ",", 
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", ":", 
                    RowBox[{"2", "|", "3"}]}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Grid", "[", 
                    RowBox[{
                    RowBox[{"Partition", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`functionName", ",", 
                    "IPBenchmarks`Private`numberOfDimensions", ",", 
                    "IPBenchmarks`Private`opts"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "PlotSizeAndMemoryDependency", ",", 
                    "PlotColorSpaceDependency", ",", 
                    "PlotImageTypeDependency", ",", 
                    "PlotChannelInterleavingDependency"}], "}"}]}], ",", 
                    "2"}], "]"}], ",", 
                    RowBox[{"Background", "\[Rule]", 
                    RowBox[{"Lighter", "[", "LightGray", "]"}]}]}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionTimeCharts", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`FunctionTimeCharts\"\>", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"IPBenchmarks`FunctionTimeCharts\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionTimeCharts[\\!\\(\\*StyleBox[\\\"\
functionName\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \
\\\"TI\\\"]\\)]\\n\\tcombination of all the charts for \
\\!\\(\\*StyleBox[\\\"functionName\\\", \\\"TI\\\"]\\) for \\!\\(\\*StyleBox[\
\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)-dimensional case as a column of \
two rows.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\
\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functionName\\\\\\\\\\\\\\\", \\\\\\\
\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the name of \
ImageProcessing function as a symbol\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"numberOfDimensions\\\\\\\\\\\\\\\", \\\
\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or \
3\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\\n\\nFollowing options are supported:\\n\
\[Bullet] \\\"Normalize\\\" - normalize time and memory values with respect \
to pixel count\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionTimeCharts[\!\(\*StyleBox[\"functionName\", \"TI\"]\), \
\!\(\*StyleBox[\"numberOfDimensions\", \"TI\"]\)]\n\tcombination of all the \
charts for \!\(\*StyleBox[\"functionName\", \"TI\"]\) for \
\!\(\*StyleBox[\"numberOfDimensions\", \"TI\"]\)-dimensional case as a column \
of two rows.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"functionName\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the name of ImageProcessing \
function as a symbol\\\"\"}, \
{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"numberOfDimensions\\\\\\\", \\\\\\\"TI\
\\\\\\\"]\\\\)\\\"\", \"\\\"2 or 3\\\"\"}}, Rule[GridBoxAlignment, List[Rule[\
\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)\n\nFollowing options are supported:\n\[Bullet] \
\"Normalize\" - normalize time and memory values with respect to pixel count",
     "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionTimeCharts, {
      IPBenchmarks`FunctionTimeCharts[
         Pattern[IPBenchmarks`Private`functionName, 
          Blank[Symbol]], 
         Pattern[IPBenchmarks`Private`numberOfDimensions, 
          Alternatives[2, 3]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Grid[
         Partition[
          
          Map[#[IPBenchmarks`Private`functionName, 
            IPBenchmarks`Private`numberOfDimensions, 
            IPBenchmarks`Private`opts]& , {
           IPBenchmarks`PlotSizeAndMemoryDependency, 
            IPBenchmarks`PlotColorSpaceDependency, 
            IPBenchmarks`PlotImageTypeDependency, 
            IPBenchmarks`PlotChannelInterleavingDependency}], 2], Background -> 
         Lighter[LightGray]], IPBenchmarks`FunctionTimeCharts[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`FunctionTimeCharts"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionTimeCharts"], False]]], "Output",
 CellChangeTimes->{3.819784652216358*^9, 3.8200593983249187`*^9, 
  3.82358319835921*^9, 3.8237550437634077`*^9, 3.830276598153618*^9, 
  3.830318334767708*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"39fe0b4b-997f-490c-a444-4e720b37939b"]
}, Open  ]],

Cell["\<\
The function returns a combination of all the charts for function name.\
\>", "Text",
 CellChangeTimes->{{3.819784657480102*^9, 3.819784659341325*^9}, {
  3.8303185271919546`*^9, 
  3.8303185441751947`*^9}},ExpressionUUID->"719fe3a3-debc-44fd-a289-\
2be8a83ae7ce"],

Cell[BoxData[
 RowBox[{"FunctionTimeCharts", "[", 
  RowBox[{"AlphaChannel", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.830318337376904*^9, 
  3.830318341876583*^9}},ExpressionUUID->"70db2f68-9fa3-478a-8fde-\
226e1c4c57f2"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionSummary", "Subsubsection",
 CellChangeTimes->{{3.819784612758767*^9, 3.819784617181883*^9}, 
   3.8197846512345953`*^9},ExpressionUUID->"a84c2e3f-07ff-4d6b-923b-\
4aea3a218a91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionSummary"}]], "Input",
 CellChangeTimes->{{3.819784651749516*^9, 3.819784651900166*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"1a92ff79-abd3-428c-9991-054ad147f493"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionSummary[\\!\\(\\*StyleBox[\\\"functionName\\\
\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\
\\)]\\n\\tget \\!\\(\\*StyleBox[\\\"functionName\\\", \\\"TI\\\"]\\) general \
information for \\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \
\\\"TI\\\"]\\)-dimensional case.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functionName\\\
\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"the name of ImageProcessing function as a symbol\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"\
numberOfDimensions\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\
\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or All\\\\\\\"\\\"}}, Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"FunctionSummary", "[", 
                    RowBox[{"IPBenchmarks`Private`functionName_Symbol", ",", 
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", ":", 
                    RowBox[{"2", "|", "3"}]}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    
                    RowBox[{"OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"DynamicModule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"IPBenchmarks`Private`grid", ",", 
                    "IPBenchmarks`Private`is2DQ", ",", 
                    "IPBenchmarks`Private`is3DQ", ",", 
                    "IPBenchmarks`Private`tmp"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`tmp", "=", 
                    RowBox[{
                    RowBox[{"BinaryDeserialize", "[", 
                    
                    RowBox[{"IPBenchmarks`Private`$$init", "[", 
                    "\"Functions\"", "]"}], "]"}], "[", 
                    "IPBenchmarks`Private`functionName", "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"IPBenchmarks`Private`is2DQ", ",", 
                    "IPBenchmarks`Private`is3DQ"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`tmp", "[", "#1", "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"\"2DQ\"", ",", "\"3DQ\""}], "}"}]}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", "===", 
                    "2"}], "&&", 
                    RowBox[{"!", "IPBenchmarks`Private`is2DQ"}]}], ")"}], 
                    "||", 
                    RowBox[{"(", 
                    RowBox[{
                    
                    RowBox[{"IPBenchmarks`Private`numberOfDimensions", "===", 
                    "3"}], "&&", 
                    RowBox[{"!", "IPBenchmarks`Private`is3DQ"}]}], ")"}]}], 
                    ",", 
                    RowBox[{
                    RowBox[{"Throw", "[", "$Failed", "]"}], ";"}]}], "]"}], 
                    ";", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`prepareSummaryGrid", "[", 
                    
                    RowBox[{"IPBenchmarks`Private`functionName", ",", 
                    "IPBenchmarks`Private`numberOfDimensions", ",", 
                    "IPBenchmarks`Private`opts"}], "]"}], ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}]}]}], "]"}], "]"}]}]}, {" "}, {
                    RowBox[{
                    RowBox[{"FunctionSummary", "[", "___", "]"}], ":=", 
                    
                    RowBox[{
                    "IPBenchmarks`Private`createFailureSignature", "[", 
                    "\"IPBenchmarks`FunctionSummary\"", "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"IPBenchmarks`FunctionSummary\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionSummary[\\!\\(\\*StyleBox[\\\"functionName\\\
\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\
\\)]\\n\\tget \\!\\(\\*StyleBox[\\\"functionName\\\", \\\"TI\\\"]\\) general \
information for \\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \
\\\"TI\\\"]\\)-dimensional case.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\
\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"functionName\\\
\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"the name of ImageProcessing function as a symbol\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"\
numberOfDimensions\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\
\\)\\\\\\\"\\\", \\\"\\\\\\\"2 or All\\\\\\\"\\\"}}, Rule[GridBoxAlignment, \
List[Rule[\\\"Columns\\\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionSummary[\!\(\*StyleBox[\"functionName\", \"TI\"]\), \
\!\(\*StyleBox[\"numberOfDimensions\", \"TI\"]\)]\n\tget \
\!\(\*StyleBox[\"functionName\", \"TI\"]\) general information for \
\!\(\*StyleBox[\"numberOfDimensions\", \"TI\"]\)-dimensional case.\n\n\
Arguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"functionName\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the name of ImageProcessing \
function as a symbol\\\"\"}, \
{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"numberOfDimensions\\\\\\\", \\\\\\\"TI\
\\\\\\\"]\\\\)\\\"\", \"\\\"2 or All\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionSummary, {IPBenchmarks`FunctionSummary[
         Pattern[IPBenchmarks`Private`functionName, 
          Blank[Symbol]], 
         Pattern[IPBenchmarks`Private`numberOfDimensions, 
          Alternatives[2, 3]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Catch[
         DynamicModule[{
          IPBenchmarks`Private`grid, IPBenchmarks`Private`is2DQ, 
           IPBenchmarks`Private`is3DQ, IPBenchmarks`Private`tmp}, 
          IPBenchmarks`Private`tmp = BinaryDeserialize[
             IPBenchmarks`Private`$$init["Functions"]][
            IPBenchmarks`Private`functionName]; {
            IPBenchmarks`Private`is2DQ, IPBenchmarks`Private`is3DQ} = 
           Map[IPBenchmarks`Private`tmp[#]& , {"2DQ", "3DQ"}]; If[
            Or[
             And[IPBenchmarks`Private`numberOfDimensions === 2, 
              Not[IPBenchmarks`Private`is2DQ]], 
             And[IPBenchmarks`Private`numberOfDimensions === 3, 
              Not[IPBenchmarks`Private`is3DQ]]], Throw[$Failed]; Null]; 
          Dynamic[
            IPBenchmarks`Private`prepareSummaryGrid[
            IPBenchmarks`Private`functionName, 
             IPBenchmarks`Private`numberOfDimensions, 
             IPBenchmarks`Private`opts], SynchronousUpdating -> False]]], 
       IPBenchmarks`FunctionSummary[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`createFailureSignature[
        "IPBenchmarks`FunctionSummary"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionSummary"], False]]], "Output",
 CellChangeTimes->{3.819784652216358*^9, 3.8200593983249187`*^9, 
  3.82358319835921*^9, 3.8237550437634077`*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"8af9957f-cef4-40c0-bd94-5ce1e56218c1"]
}, Open  ]],

Cell["\<\
The function returns a dynamic grid with a general information about \
functionName.\
\>", "Text",
 CellChangeTimes->{{3.819784657480102*^9, 
  3.819784659341325*^9}},ExpressionUUID->"74fbaef8-a7c7-4a90-934c-\
b0eab7eec968"],

Cell[BoxData[
 RowBox[{"FunctionSummary", "[", 
  RowBox[{"AlphaChannel", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.830317817622793*^9, 
  3.83031782689995*^9}},ExpressionUUID->"b0c892d5-402a-431c-aba7-\
ee32cb46408c"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionSummaryDifference", "Subsubsection",
 CellChangeTimes->{{3.819784612758767*^9, 3.819784617181883*^9}, 
   3.8197846512345953`*^9, 
   3.830276535411714*^9},ExpressionUUID->"703a59fe-fbde-45d2-8d9b-\
c88dc3979fc4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionSummaryDifference"}]], "Input",
 CellChangeTimes->{{3.819784651749516*^9, 3.819784651900166*^9}, 
   3.830317839352218*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"6b3a4ef2-455e-42e5-b3ab-8885946fe415"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionSummaryDifference[\\!\\(\\*StyleBox[\\\"\
master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)]\\n\\tcompares \
\\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset object.\
\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\
\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the \
copied result from chart plot in a form of association\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"the copied result from chart plot in a form of \
association\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FunctionSummaryDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master_Association", ",", 
                    "IPBenchmarks`Private`branch_Association", ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"DynamicModule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`headers", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTitle", "[", "#1", "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Threads\"\>", ",", "\<\"Master\"\>", 
                    ",", "\<\"Branch\"\>"}], "}"}]}], "}"}]}], ",", 
                    "IPBenchmarks`Private`temp", ",", 
                    "IPBenchmarks`Private`replacements", ",", 
                    "IPBenchmarks`Private`resThreads", ",", 
                    "IPBenchmarks`Private`resMemoryLeak", ",", 
                    "IPBenchmarks`Private`resImageType", ",", 
                    "IPBenchmarks`Private`resColorSpace", ",", 
                    "IPBenchmarks`Private`showSummaryResults"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`validateSummaryComparisonFile", "[",
                     "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`branch"}], "}"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "[", "#1", "]"}], 
                    "<>", "\<\" thread (s)\"\>"}], ",", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`master", "[", "\<\"Threads\"\>", 
                    "]"}], "[", "#1", "]"}], ",", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`branch", "[", "\<\"Threads\"\>", 
                    "]"}], "[", "#1", "]"}]}], "}"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"IPBenchmarks`Private`temp", ",", 
                    RowBox[{"ReplacePart", "[", 
                    RowBox[{
                    RowBox[{"Divide", "@@", 
                    RowBox[{
                    "Reverse", "[", "IPBenchmarks`Private`temp", "]"}]}], ",", 
                    RowBox[{"1", "\[Rule]", "\<\"Thread ratio\"\>"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`resThreads", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{"IPBenchmarks`Private`headers", ",", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTimeDifference", "[", "3", 
                    "]"}], "/@", "IPBenchmarks`Private`temp"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTimeDifference", "[", "3", 
                    "]"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"\<\"Leak (MB)\"\>", ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master", 
                    "[", "\<\"MemoryLeakTest\"\>", "]"}], "]"}], ",", 
                    RowBox[{"QuantityMagnitude", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`branch", 
                    "[", "\<\"MemoryLeakTest\"\>", "]"}], "]"}]}], "}"}], 
                    "}"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`resMemoryLeak", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{"IPBenchmarks`Private`headers", ",", 
                    
                    RowBox[{"\<\"Threads\"\>", 
                    "\[Rule]", "\<\"MemoryLeak\"\>"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    "IPBenchmarks`Private`temp"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"IPBenchmarks`Private`resColorSpace", ",", 
                    "IPBenchmarks`Private`resImageType"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`imageProp", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`imageProp"}], "]"}], "&&", 
                    RowBox[{"KeyExistsQ", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`branch", ",", 
                    "IPBenchmarks`Private`imageProp"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Keys", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`branch", "[", 
                    "IPBenchmarks`Private`imageProp", "]"}], "]"}], ",", 
                    RowBox[{"Values", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master", "[", 
                    "IPBenchmarks`Private`imageProp", "]"}], "]"}], ",", 
                    RowBox[{"Values", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`branch", "[", 
                    "IPBenchmarks`Private`imageProp", "]"}], "]"}]}], "}"}], 
                    "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{"IPBenchmarks`Private`headers", ",", 
                    
                    RowBox[{"\<\"Threads\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`imageProp"}], ",", 
                    RowBox[{"{", "1", "}"}]}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`$$stylePropertyDifference", 
                    "[", "3", "]"}], "/@", "IPBenchmarks`Private`temp"}]}], 
                    "]"}]}]}]}], "]"}]}], "]"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ColorSpace\"\>", ",", "\<\"ImageType\"\>"}], 
                    "}"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`replacements", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resThreads", 
                    "\[Rule]", "\<\"Threads\"\>"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`resMemoryLeak", 
                    "\[Rule]", "\<\"MemoryLeak\"\>"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`resImageType", 
                    "\[Rule]", "\<\"ImageType\"\>"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`resColorSpace", 
                    "\[Rule]", "\<\"ColorSpace\"\>"}]}], "}"}]}], ";", 
                    RowBox[{
                    "IPBenchmarks`Private`showSummaryResults", "=", 
                    "IPBenchmarks`Private`resThreads"}], ";", 
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"IPBenchmarks`Private`showSummaryResults", ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}], ",", "IPBenchmarks`Private`replacements", ",", 
                    RowBox[{
                    "Background", "\[Rule]", 
                    "IPBenchmarks`Private`$$backgroundColor"}]}], "]"}], ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`constructComparisonGrid", "[", 
                    RowBox[{"IPBenchmarks`Private`showSummaryResults", ",", 
                    RowBox[{"{", 
                    RowBox[{"8", ",", "8", ",", "8"}], "}"}]}], "]"}], ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], 
                    "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionSummaryDifference", "[", 
                    RowBox[{
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"Master\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`master_Association"}], ",", 
                    
                    RowBox[{"\<\"Branch\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`branch_Association"}]}], 
                    "\[RightAssociation]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"FunctionSummaryDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`branch", ",", 
                    "IPBenchmarks`Private`opts"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionSummaryDifference", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`FunctionSummaryDifference\"\>", 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`FunctionSummaryDifference\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionSummaryDifference[\\!\\(\\*StyleBox[\\\"\
master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"numberOfDimensions\\\", \\\"TI\\\"]\\)]\\n\\tcompares \
\\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset object.\
\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\
\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the \
copied result from chart plot in a form of association\\\\\\\"\\\"}, \
{\\\"\\\\\\\"\\\\\\\\!\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \
\\\"\\\\\\\"the copied result from chart plot in a form of \
association\\\\\\\"\\\"}}, Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", \
List[List[Left]]]]], Rule[AutoDelete, False], Rule[GridBoxItemSize, \
List[Rule[\\\"Columns\\\", List[List[Automatic]]], Rule[BaseStyle, \
List[Rule[ShowStringCharacters, True]]], Rule[\\\"Rows\\\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\\\"Columns\\\", \
List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionSummaryDifference[\!\(\*StyleBox[\"master\", \"TI\"]\), \
\!\(\*StyleBox[\"branch\", \"TI\"]\), \!\(\*StyleBox[\"numberOfDimensions\", \
\"TI\"]\)]\n\tcompares \!\(\*StyleBox[\"master\", \"TI\"]\) and \
\!\(\*StyleBox[\"branch\", \"TI\"]\) in a form of Dataset object.\n\n\
Arguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"master\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot in a \
form of association\\\"\"}, {\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"branch\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot \
in a form of association\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionSummaryDifference, {
      IPBenchmarks`FunctionSummaryDifference[
         Pattern[IPBenchmarks`Private`master, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`branch, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Catch[
         DynamicModule[{IPBenchmarks`Private`headers = {
             Map[
             IPBenchmarks`Private`$$styleTitle[#]& , {
              "Threads", "Master", "Branch"}]}, IPBenchmarks`Private`temp, 
           IPBenchmarks`Private`replacements, IPBenchmarks`Private`resThreads,
            IPBenchmarks`Private`resMemoryLeak, 
           IPBenchmarks`Private`resImageType, 
           IPBenchmarks`Private`resColorSpace, 
           IPBenchmarks`Private`showSummaryResults}, 
          Map[IPBenchmarks`Private`validateSummaryComparisonFile[#]& , {
            IPBenchmarks`Private`master, IPBenchmarks`Private`branch}]; 
          IPBenchmarks`Private`temp = Map[{
              StringJoin[
               ToString[#], " thread (s)"], 
              IPBenchmarks`Private`master["Threads"][#], 
              IPBenchmarks`Private`branch["Threads"][#]}& , {1, 4}]; 
          IPBenchmarks`Private`temp = Append[IPBenchmarks`Private`temp, 
             ReplacePart[
              Apply[Divide, 
               Reverse[IPBenchmarks`Private`temp]], 1 -> "Thread ratio"]]; 
          IPBenchmarks`Private`resThreads = Join[IPBenchmarks`Private`headers, 
             Map[
              IPBenchmarks`Private`$$styleTimeDifference[3], 
              IPBenchmarks`Private`temp]]; IPBenchmarks`Private`temp = Map[
             IPBenchmarks`Private`$$styleTimeDifference[3], {{"Leak (MB)", 
               QuantityMagnitude[
                IPBenchmarks`Private`master["MemoryLeakTest"]], 
               QuantityMagnitude[
                IPBenchmarks`Private`branch["MemoryLeakTest"]]}}]; 
          IPBenchmarks`Private`resMemoryLeak = Join[
             Replace[
             IPBenchmarks`Private`headers, "Threads" -> "MemoryLeak", {1}], 
             IPBenchmarks`Private`temp]; {
            IPBenchmarks`Private`resColorSpace, 
             IPBenchmarks`Private`resImageType} = Map[
             Function[IPBenchmarks`Private`imageProp, 
              If[
               And[
                KeyExistsQ[
                IPBenchmarks`Private`master, IPBenchmarks`Private`imageProp], 
                KeyExistsQ[
                IPBenchmarks`Private`branch, IPBenchmarks`Private`imageProp]],
                IPBenchmarks`Private`temp = Transpose[{
                   Keys[
                    IPBenchmarks`Private`branch[
                    IPBenchmarks`Private`imageProp]], 
                   Values[
                    IPBenchmarks`Private`master[
                    IPBenchmarks`Private`imageProp]], 
                   Values[
                    IPBenchmarks`Private`branch[
                    IPBenchmarks`Private`imageProp]]}]; 
               IPBenchmarks`Private`temp = Join[
                  Replace[
                  IPBenchmarks`Private`headers, "Threads" -> 
                   IPBenchmarks`Private`imageProp, {1}], 
                  Map[
                   IPBenchmarks`Private`$$stylePropertyDifference[3], 
                   IPBenchmarks`Private`temp]]]], {
             "ColorSpace", "ImageType"}]; 
          IPBenchmarks`Private`replacements = {
            IPBenchmarks`Private`resThreads -> "Threads", 
             IPBenchmarks`Private`resMemoryLeak -> "MemoryLeak", 
             IPBenchmarks`Private`resImageType -> "ImageType", 
             IPBenchmarks`Private`resColorSpace -> "ColorSpace"}; 
          IPBenchmarks`Private`showSummaryResults = 
           IPBenchmarks`Private`resThreads; Column[{
             SetterBar[
              Dynamic[
              IPBenchmarks`Private`showSummaryResults, SynchronousUpdating -> 
               False], IPBenchmarks`Private`replacements, Background -> 
              IPBenchmarks`Private`$$backgroundColor], 
             Dynamic[
              IPBenchmarks`Private`constructComparisonGrid[
              IPBenchmarks`Private`showSummaryResults, {8, 8, 8}], 
              SynchronousUpdating -> False]}, Alignment -> Center]]], 
       IPBenchmarks`FunctionSummaryDifference[
         Association["Master" -> Pattern[IPBenchmarks`Private`master, 
            Blank[Association]], "Branch" -> 
          Pattern[IPBenchmarks`Private`branch, 
            Blank[Association]]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> 
       IPBenchmarks`FunctionSummaryDifference[
        IPBenchmarks`Private`master, IPBenchmarks`Private`branch, 
         IPBenchmarks`Private`opts], IPBenchmarks`FunctionSummaryDifference[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`FunctionSummaryDifference"]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionSummaryDifference"], False]]], "Output",
 CellChangeTimes->{3.819784652216358*^9, 3.8200593983249187`*^9, 
  3.82358319835921*^9, 3.8237550437634077`*^9, 3.8303178494296575`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"32f4f19e-77cf-49f8-a187-cc3b8ef51d03"]
}, Open  ]],

Cell["\<\
The function returns a dynamic grid for master and branch results comparison.\
\>", "Text",
 CellChangeTimes->{{3.819784657480102*^9, 3.819784659341325*^9}, {
  3.830318672947549*^9, 
  3.830318711023116*^9}},ExpressionUUID->"acc1cc75-34a4-4647-a3f4-\
b3f6f63b3e55"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"master", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Association", "AssociationIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Association", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["4", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["3296", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Association[
    "Threads" -> Association[1 -> 0.0004399453125, 4 -> 0.00045239404296875], 
     "MemoryLeakTest" -> Quantity[0., "Megabytes"], "ImageType" -> 
     Association[
      "Bit" -> "Real64", "Byte" -> "Byte", "Bit16" -> "Bit16", "Real32" -> 
       "Real32", "Real64" -> "Real64"], "ColorSpace" -> 
     Association[
      "Grayscale" -> Automatic, "RGB" -> Automatic, "CMYK" -> Automatic, 
       "HSB" -> Automatic, "LCH" -> Automatic, "LAB" -> Automatic, "LUV" -> 
       Automatic, "XYZ" -> Automatic, Automatic -> Automatic]],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch", "=", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Association", "AssociationIcon", 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Association", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["4", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["3360", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Association[
     "Threads" -> Association[1 -> 0.00003399453125, 4 -> 0.045239404296875], 
      "MemoryLeakTest" -> Quantity[0.13, "Megabytes"], "ImageType" -> 
      Association[
       "Bit" -> "Real32", "Byte" -> "Byte", "Bit16" -> "Bit16", "Real32" -> 
        "Real32", "Real64" -> "Real32"], "ColorSpace" -> 
      Association[
       "Grayscale" -> Automatic, "RGB" -> "RGB", "CMYK" -> Automatic, "HSB" -> 
        "RGB", "LCH" -> Automatic, "LAB" -> Automatic, "LUV" -> Automatic, 
        "XYZ" -> Automatic, Automatic -> Automatic]],
     SelectWithContents->True,
     Selectable->False]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"FunctionSummaryDifference", "[", 
  RowBox[{"master", ",", "branch"}], "]"}]}], "Input",
 CellChangeTimes->{{3.823674316477084*^9, 3.823674318004919*^9}, {
   3.823674359596429*^9, 3.8236743629215107`*^9}, 3.823680165544031*^9, {
   3.823680655760372*^9, 3.823680660192957*^9}, 3.8236809519138737`*^9, {
   3.823681345535177*^9, 3.823681362642638*^9}, {3.823681423872552*^9, 
   3.823681425051014*^9}, {3.830317885411557*^9, 3.8303179135658607`*^9}, {
   3.830317949576007*^9, 3.8303179991973124`*^9}, 3.8303180465202436`*^9, 
   3.8303183064728303`*^9},ExpressionUUID->"13338dc8-7e12-46d4-9e40-\
dfd0447dda95"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionBenchmarkTimingsDifference", "Subsubsection",
 CellChangeTimes->{{3.819784612758767*^9, 3.819784617181883*^9}, 
   3.8197846512345953`*^9, 
   3.8302765406418104`*^9},ExpressionUUID->"d0673afd-1b04-493c-b837-\
ea038279e832"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionBenchmarkTimingsDifference"}]], "Input",
 CellChangeTimes->{{3.819784651749516*^9, 3.819784651900166*^9}, 
   3.830317839352218*^9, 3.830318070315479*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"06049bbc-9061-4753-9a70-025c2b71d76f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionBenchmarkTimingsDifference[\\!\\(\\*\
StyleBox[\\\"master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\
\"TI\\\"]\\)]\\n\\tcompares \\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\\\\\\\\\", \\\\\\\\\\\
\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FunctionBenchmarkTimingsDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master_Association", ",", 
                    "IPBenchmarks`Private`branch_Association", ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"DynamicModule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`headStyle", ",", 
                    "IPBenchmarks`Private`colorSpaces", ",", 
                    "IPBenchmarks`Private`mapReplace", ",", 
                    "IPBenchmarks`Private`resTime", ",", 
                    "IPBenchmarks`Private`resMemory", ",", 
                    "IPBenchmarks`Private`replacements", ",", 
                    "IPBenchmarks`Private`showBenchmarkTimingsResults"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`validateTimingsComparisonFile", "[",
                     "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`branch"}], "}"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`headStyle", "=", 
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`quantity", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTitle", "[", "#1", "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"\<\"ImageSize\"\>", ",", 
                    
                    RowBox[{"\<\"Master (\"\>", "<>", 
                    "IPBenchmarks`Private`quantity", "<>", "\<\")\"\>"}], ",", 
                    
                    RowBox[{"\<\"Branch (\"\>", "<>", 
                    "IPBenchmarks`Private`quantity", "<>", "\<\")\"\>"}]}], 
                    "}"}]}], "}"}]}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`colorSpaces", "=", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"IPBenchmarks`Private`master", "[", 
                    RowBox[{"\<\"Time\"\>", ",", "\<\"ColorSpace\"\>"}], 
                    "]"}], "]"}], "===", "10"}], ",", 
                    "IPBenchmarks`Private`$$colorSpaces2D", ",", 
                    "IPBenchmarks`Private`$$colorSpaces3D"}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`mapReplace", "=", 
                    RowBox[{"AssociationThread", "[", 
                    RowBox[{"IPBenchmarks`Private`$$benchmarkTypes", 
                    "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Quantity", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`$$pixelCounts", ",", "\<\"MB\"\>"}],
                     "]"}], ",", "IPBenchmarks`Private`colorSpaces", ",", 
                    "IPBenchmarks`Private`$$imageTypes", ",", 
                    "IPBenchmarks`Private`$$interleavingType"}], "}"}]}], 
                    "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`resTime", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTimeDifference", "[", "3", 
                    "]"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`mapReplace", "[", "#1", "]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`master", "[", 
                    RowBox[{"\<\"Time\"\>", ",", "#1"}], "]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`branch", "[", 
                    RowBox[{"\<\"Time\"\>", ",", "#1"}], "]"}]}], "}"}], 
                    "]"}]}], "&"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`resMemory", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTimeDifference", "[", "2", 
                    "]"}], "/@", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`master", "[", 
                    RowBox[{"\<\"Memory\"\>", ",", "#1"}], "]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`branch", "[", 
                    RowBox[{"\<\"Memory\"\>", ",", "#1"}], "]"}]}], "}"}], 
                    "]"}]}], "&"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`res", "=", 
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`benchmarkType", ",", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resTime", "[", 
                    "IPBenchmarks`Private`benchmarkType", "]"}], 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}], 
                    ",", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resMemory", "[", 
                    "IPBenchmarks`Private`benchmarkType", "]"}], 
                    "\[LeftDoubleBracket]", "#1", "\[RightDoubleBracket]"}]}],
                     "]"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`resMemory", "[", 
                    "IPBenchmarks`Private`benchmarkType", "]"}], "]"}], 
                    "]"}]}], ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Append", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`headStyle", "[", "\<\"s\"\>", "]"}],
                     "/.", "\[VeryThinSpace]", 
                    
                    RowBox[{"\<\"ImageSize\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`benchmarkType"}]}], ",", 
                    RowBox[{"Drop", "[", 
                    RowBox[{
                    RowBox[{"First", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`headStyle", "[", "\<\"MB\"\>", 
                    "]"}], "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}]}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`replacements", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`res", "[", "#1", "]"}], 
                    "\[Rule]", "#1"}], "&"}], ")"}], "/@", 
                    "IPBenchmarks`Private`$$benchmarkTypes"}]}], ";", 
                    RowBox[{
                    "IPBenchmarks`Private`showBenchmarkTimingsResults", "=", 
                    RowBox[{
                    "IPBenchmarks`Private`res", "[", "\<\"ImageSize\"\>", 
                    "]"}]}], ";", 
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"SetterBar", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`showBenchmarkTimingsResults", ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}], ",", "IPBenchmarks`Private`replacements", ",", 
                    RowBox[{
                    "Background", "\[Rule]", 
                    "IPBenchmarks`Private`$$backgroundColor"}]}], "]"}], ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "200", "]"}], ",", 
                    RowBox[{"Style", "[", 
                    
                    RowBox[{"\<\"Execution Time\"\>", ",", "15", ",", "Black",
                     ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\<\"Rockwell\"\>"}]}], 
                    "]"}], ",", 
                    RowBox[{"Spacer", "[", "120", "]"}], ",", 
                    RowBox[{"Style", "[", 
                    
                    RowBox[{"\<\"Used Memory\"\>", ",", "15", ",", "Black", 
                    ",", "Bold", ",", 
                    RowBox[{"FontFamily", "\[Rule]", "\<\"Rockwell\"\>"}]}], 
                    "]"}]}], "}"}], "]"}], ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`constructComparisonGrid", "[", 
                    "IPBenchmarks`Private`showBenchmarkTimingsResults", "]"}],
                     ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], 
                    "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionBenchmarkTimingsDifference", "[", 
                    RowBox[{
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"Master\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`master_Association"}], ",", 
                    
                    RowBox[{"\<\"Branch\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`branch_Association"}]}], 
                    "\[RightAssociation]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"FunctionBenchmarkTimingsDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`branch", ",", 
                    "IPBenchmarks`Private`opts"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionBenchmarkTimingsDifference", "[", "___", "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`FunctionBenchmarkTimingsDifference\
\"\>", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`FunctionBenchmarkTimingsDifference\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionBenchmarkTimingsDifference[\\!\\(\\*\
StyleBox[\\\"master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\
\"TI\\\"]\\)]\\n\\tcompares \\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\\\\\\\\\", \\\\\\\\\\\
\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionBenchmarkTimingsDifference[\!\(\*StyleBox[\"master\", \"TI\"]\), \
\!\(\*StyleBox[\"branch\", \"TI\"]\)]\n\tcompares \!\(\*StyleBox[\"master\", \
\"TI\"]\) and \!\(\*StyleBox[\"branch\", \"TI\"]\) in a form of Dataset \
object.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"master\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot in a \
form of association\\\"\"}, {\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"branch\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot \
in a form of association\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionBenchmarkTimingsDifference, {
      IPBenchmarks`FunctionBenchmarkTimingsDifference[
         Pattern[IPBenchmarks`Private`master, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`branch, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Catch[
         DynamicModule[{
          IPBenchmarks`Private`headStyle, IPBenchmarks`Private`colorSpaces, 
           IPBenchmarks`Private`mapReplace, IPBenchmarks`Private`resTime, 
           IPBenchmarks`Private`resMemory, IPBenchmarks`Private`replacements, 
           IPBenchmarks`Private`showBenchmarkTimingsResults}, 
          Map[IPBenchmarks`Private`validateTimingsComparisonFile[#]& , {
            IPBenchmarks`Private`master, IPBenchmarks`Private`branch}]; 
          IPBenchmarks`Private`headStyle = 
           Function[IPBenchmarks`Private`quantity, {
              Map[IPBenchmarks`Private`$$styleTitle[#]& , {"ImageSize", 
                StringJoin["Master (", IPBenchmarks`Private`quantity, ")"], 
                StringJoin[
                "Branch (", IPBenchmarks`Private`quantity, ")"]}]}]; 
          IPBenchmarks`Private`colorSpaces = If[Length[
               IPBenchmarks`Private`master["Time", "ColorSpace"]] === 10, 
             IPBenchmarks`Private`$$colorSpaces2D, 
             IPBenchmarks`Private`$$colorSpaces3D]; 
          IPBenchmarks`Private`mapReplace = 
           AssociationThread[IPBenchmarks`Private`$$benchmarkTypes -> {
               Quantity[IPBenchmarks`Private`$$pixelCounts, "MB"], 
               IPBenchmarks`Private`colorSpaces, 
               IPBenchmarks`Private`$$imageTypes, 
               IPBenchmarks`Private`$$interleavingType}]; 
          IPBenchmarks`Private`resTime = Map[
             IPBenchmarks`Private`$$styleTimeDifference[3], 
             Transpose[{
               IPBenchmarks`Private`mapReplace[#], 
               IPBenchmarks`Private`master["Time", #], 
               IPBenchmarks`Private`branch["Time", #]}]]& ; 
          IPBenchmarks`Private`resMemory = Map[
             IPBenchmarks`Private`$$styleTimeDifference[2], 
             Transpose[{
               IPBenchmarks`Private`master["Memory", #], 
               IPBenchmarks`Private`branch["Memory", #]}]]& ; 
          IPBenchmarks`Private`res = 
           Function[IPBenchmarks`Private`benchmarkType, 
             Prepend[
              Map[Flatten[
                Append[
                 Part[
                  IPBenchmarks`Private`resTime[
                  IPBenchmarks`Private`benchmarkType], #], 
                 Part[
                  IPBenchmarks`Private`resMemory[
                  IPBenchmarks`Private`benchmarkType], #]]]& , 
               Range[
                Length[
                 IPBenchmarks`Private`resMemory[
                 IPBenchmarks`Private`benchmarkType]]]], 
              Flatten[
               Append[
                ReplaceAll[
                 IPBenchmarks`Private`headStyle["s"], "ImageSize" -> 
                 IPBenchmarks`Private`benchmarkType], 
                Drop[
                 First[
                  IPBenchmarks`Private`headStyle["MB"]], 1]]]]]; 
          IPBenchmarks`Private`replacements = 
           Map[IPBenchmarks`Private`res[#] -> #& , 
             IPBenchmarks`Private`$$benchmarkTypes]; 
          IPBenchmarks`Private`showBenchmarkTimingsResults = 
           IPBenchmarks`Private`res["ImageSize"]; Column[{
             SetterBar[
              Dynamic[
              IPBenchmarks`Private`showBenchmarkTimingsResults, 
               SynchronousUpdating -> False], 
              IPBenchmarks`Private`replacements, Background -> 
              IPBenchmarks`Private`$$backgroundColor], 
             Row[{
               Spacer[200], 
               Style[
               "Execution Time", 15, Black, Bold, FontFamily -> "Rockwell"], 
               Spacer[120], 
               Style[
               "Used Memory", 15, Black, Bold, FontFamily -> "Rockwell"]}], 
             Dynamic[
              IPBenchmarks`Private`constructComparisonGrid[
              IPBenchmarks`Private`showBenchmarkTimingsResults], 
              SynchronousUpdating -> False]}, Alignment -> Center]]], 
       IPBenchmarks`FunctionBenchmarkTimingsDifference[
         Association["Master" -> Pattern[IPBenchmarks`Private`master, 
            Blank[Association]], "Branch" -> 
          Pattern[IPBenchmarks`Private`branch, 
            Blank[Association]]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> 
       IPBenchmarks`FunctionBenchmarkTimingsDifference[
        IPBenchmarks`Private`master, IPBenchmarks`Private`branch, 
         IPBenchmarks`Private`opts], 
       IPBenchmarks`FunctionBenchmarkTimingsDifference[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`FunctionBenchmarkTimingsDifference"]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionBenchmarkTimingsDifference"], False]]], "Output",
 CellChangeTimes->{3.819784652216358*^9, 3.8200593983249187`*^9, 
  3.82358319835921*^9, 3.8237550437634077`*^9, 3.8303178494296575`*^9, 
  3.8303180714091544`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"ecdc5e44-4da4-4dc6-9348-054c728debfa"]
}, Open  ]],

Cell["\<\
The function returns a dynamic grid for master and branch results comparison.\
\>", "Text",
 CellChangeTimes->{{3.819784657480102*^9, 3.819784659341325*^9}, {
  3.830318672947549*^9, 
  3.830318711023116*^9}},ExpressionUUID->"e6bd9998-ae91-41ce-8937-\
cd5ed771b02e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"master", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Association", "AssociationIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Association", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox[
             RowBox[{"{", 
               RowBox[{"2", ",", "4"}], "}"}], "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["3520", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Association[
    "Time" -> Association[
      "ImageSize" -> {0.0005762042756333644, 0.0068837576417078794`, 
        0.013659648048102616`, 0.021166292283428288`, 0.02754229274682479, 
        0.04010253623655095, 0.05603704355013904, 0.06879512912719513, 
        0.08297481361594161, 0.11214035015596176`}, 
       "ColorSpace" -> {0.0033593973461610686`, 0.01993220841615911, 
        0.0034155557780400194`, 0.019425700874096924`, 0.0034121031363493638`,
         0.003365405948040959, 0.05168371460174399, 0.05187317613028814, 
        0.04964293350491528, 0.0501587557830649}, 
       "ImageType" -> {0.17840234924262652`, 0.0033963835696374563`, 
        0.008756372725801069, 0.04960673801628811, 0.05733727793923084}, 
       "ChannelInterleaving" -> {0.020176046355254315`, 
        0.0010027570631027077`, 0.0032448861613132356`, 
        0.003101231412891364}], "Memory" -> 
     Association[
      "ImageSize" -> {0.038888, 2.115752, 3.9354, 6.310056, 8.061096, 12.0506,
         15.999144, 20.091048, 24.0426, 32.13636}, 
       "ColorSpace" -> {1.591464, 2.377912, 3.164344, 3.950776, 3.950776, 
        3.164344, 12.601528, 12.601528, 12.601528, 12.601528}, 
       "ImageType" -> {30.681608, 3.164344, 6.310072, 12.601528, 25.18444}, 
       "ChannelInterleaving" -> {3.950776, 3.950776, 3.164344, 3.164344}]],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch", "=", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Association", "AssociationIcon", 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Association", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Dimensions: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox[
              RowBox[{"{", 
                RowBox[{"2", ",", "4"}], "}"}], "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["3520", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Association[
     "Time" -> Association[
       "ImageSize" -> {0.005762042756333644, 0.0068837576417078794`, 
         0.013659648048102616`, 0.03116629228342829, 0.02754229274682479, 
         0.13, 0.05603704355013904, 0.06008795129127195, 0.08297481361594161, 
         0.11214035015596176`}, 
        "ColorSpace" -> {0.0033593973461610686`, 0.01993220841615911, 
         0.0034155557780400194`, 0.019425700874096924`, 
         0.0034121031363493638`, 0.06365405948040959, 0.005168371460174399, 
         0.05187317613028814, 0.0964293350491528, 0.9296}, 
        "ImageType" -> {0.17840234924262652`, 0.0033963835696374563`, 
         0.008756372725801069, 0.04960673801628811, 0.05733727793923084}, 
        "ChannelInterleaving" -> {0.020176046355254315`, 
         0.0010027570631027077`, 0.0032448861613132356`, 
         0.003101231412891364}], "Memory" -> 
      Association[
       "ImageSize" -> {0.46, 2.62, 3.94, 6.310056, 10.061096, 13.0506, 
         15.999144, 20.091048, 98.0426, 32.13636}, 
        "ColorSpace" -> {1.849, 2.377912, 23.164344, 3.950776, 2.950776, 
         3.164344, 12.601528, 46.601528, 6.601528, 12.601528}, 
        "ImageType" -> {46.681608, 3.46, 6.310072, 46, 25.18444}, 
        "ChannelInterleaving" -> {3.46, 23.950776, 3.164344, 1.164344}]],
     SelectWithContents->True,
     Selectable->False]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"FunctionBenchmarkTimingsDifference", "[", 
  RowBox[{"master", ",", "branch"}], "]"}]}], "Input",
 CellChangeTimes->{{3.823674316477084*^9, 3.823674318004919*^9}, {
   3.823674359596429*^9, 3.8236743629215107`*^9}, 3.823680165544031*^9, {
   3.823680655760372*^9, 3.823680660192957*^9}, 3.8236809519138737`*^9, {
   3.823681345535177*^9, 3.823681362642638*^9}, {3.823681423872552*^9, 
   3.823681425051014*^9}, {3.830317885411557*^9, 3.8303179135658607`*^9}, {
   3.830317949576007*^9, 3.8303179991973124`*^9}, {3.8303180465202436`*^9, 
   3.8303180739401965`*^9}, 3.830318104457472*^9, 3.8303181797475*^9, 
   3.830318299660799*^9},ExpressionUUID->"a75e8555-464a-4050-94b3-\
01ea39731bdc"]
}, Closed]],

Cell[CellGroupData[{

Cell["FunctionAutomaticIssuesSummaryDifference", "Subsubsection",
 CellChangeTimes->{{3.819784612758767*^9, 3.819784617181883*^9}, 
   3.8197846512345953`*^9, 
   3.8302765484340715`*^9},ExpressionUUID->"cfe402bf-06be-418b-8657-\
59b7d1cb43ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FunctionAutomaticIssuesSummaryDifference"}]], "Input",
 CellChangeTimes->{{3.819784651749516*^9, 3.819784651900166*^9}, 
   3.830317839352218*^9, 3.830318070315479*^9, 3.8303182023709784`*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"5151b269-f894-4975-963e-20f85514b278"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionAutomaticIssuesSummaryDifference[\\!\\(\\*\
StyleBox[\\\"master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\
\"TI\\\"]\\)]\\n\\tcompares \\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\\\\\\\\\", \\\\\\\\\\\
\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"FunctionAutomaticIssuesSummaryDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`master_Association", ",", 
                    "IPBenchmarks`Private`branch_Association", ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"Catch", "[", 
                    RowBox[{"DynamicModule", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`headers", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTitle", "[", "#1", "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Issues\"\>", ",", "\<\"Master\"\>", 
                    ",", "\<\"Branch\"\>"}], "}"}]}]}], ",", 
                    RowBox[{"IPBenchmarks`Private`resHeaders", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleText", "[", "#1", "]"}], 
                    "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    
                    RowBox[{"\<\"Median input\"\>", 
                    ",", "\<\"Median time (s)\"\>", 
                    ",", "\<\"Issue input\"\>", 
                    ",", "\<\"Issue slowness (%)\"\>"}], "}"}]}]}], ",", 
                    "IPBenchmarks`Private`resBranch", ",", 
                    "IPBenchmarks`Private`resMaster", ",", 
                    "IPBenchmarks`Private`replacements", ",", 
                    "IPBenchmarks`Private`showAutomaticIssuesSummarResults", 
                    ",", "IPBenchmarks`Private`sameMaster", ",", 
                    "IPBenchmarks`Private`unsameMaster", ",", 
                    "IPBenchmarks`Private`sameBranch", ",", 
                    "IPBenchmarks`Private`unsameBranch", ",", 
                    "IPBenchmarks`Private`sameIssuesPos", ",", 
                    "IPBenchmarks`Private`sameIssues", ",", 
                    "IPBenchmarks`Private`tempBranch", ",", 
                    "IPBenchmarks`Private`tempMaster", ",", 
                    "IPBenchmarks`Private`totalLength"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`validateIssuesComparisonFile", "[", 
                    "#1", "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`master", ",", 
                    "IPBenchmarks`Private`branch"}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`resBranch", ",", 
                    "IPBenchmarks`Private`resMaster"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Replace", "[", 
                    RowBox[{
                    RowBox[{"Values", "[", "#1", "]"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`x_Quantity", "\[RuleDelayed]", 
                    RowBox[{
                    "QuantityMagnitude", "[", "IPBenchmarks`Private`x", 
                    "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"-", "2"}], "}"}]}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`branch", ",", 
                    "IPBenchmarks`Private`master"}], "}"}]}]}], ";", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`sameMaster", ",", 
                    "IPBenchmarks`Private`unsameMaster"}], "}"}], "=", 
                    RowBox[{
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`trueFalse", ",", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resBranch", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`resMaster", "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", "3"}], "\[RightDoubleBracket]"}]}], 
                    "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`resMaster", "]"}], 
                    "]"}]}], ",", "IPBenchmarks`Private`trueFalse"}], "]"}], 
                    "]"}]}], "]"}], "/@", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "False"}], "}"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`sameBranch", "=", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resBranch", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], ",",
                     "#1"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resMaster", "\[LeftDoubleBracket]", 
                    RowBox[{"#1", ",", "3"}], "\[RightDoubleBracket]"}], 
                    "&"}], ")"}], "/@", "IPBenchmarks`Private`sameMaster"}]}],
                     "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`unsameBranch", "=", 
                    RowBox[{"Fold", "[", 
                    RowBox[{"DeleteCases", ",", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`resBranch", "]"}], 
                    "]"}], ",", "IPBenchmarks`Private`sameBranch"}], "]"}]}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`sameIssuesPos", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`sameMaster", ",", 
                    "IPBenchmarks`Private`sameBranch"}], "}"}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`totalLength", "=", 
                    RowBox[{"Total", "[", 
                    RowBox[{"Length", "/@", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`sameIssuesPos", ",", 
                    "IPBenchmarks`Private`unsameBranch", ",", 
                    "IPBenchmarks`Private`unsameMaster"}], "}"}]}], "]"}]}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`sameIssues", "=", 
                    RowBox[{"Function", "[", 
                    RowBox[{"IPBenchmarks`Private`issueNumber", ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`ls", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resMaster", "\[LeftDoubleBracket]", 
                    "#1", "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`resBranch", "\[LeftDoubleBracket]", 
                    "#2", "\[RightDoubleBracket]"}]}], "}"}], "&"}], ")"}], 
                    "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`sameIssuesPos", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"IPBenchmarks`Private`issueNumber", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`sameIssuesPos", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"IPBenchmarks`Private`issueNumber", ",", "2"}], 
                    "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`ls", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{"IPBenchmarks`Private`resHeaders", ",", 
                    RowBox[{
                    "Transpose", "[", "IPBenchmarks`Private`ls", "]"}]}], 
                    "}"}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`ls", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`ls", "\[LeftDoubleBracket]", "#1", 
                    "\[RightDoubleBracket]"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "IPBenchmarks`Private`ls", "]"}], 
                    "]"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`ls", "=", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`$$styleTimeDifference", "[", "3", 
                    "]"}], "/@", "IPBenchmarks`Private`ls"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`ls", "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`ls", ",", 
                    "IPBenchmarks`Private`headers"}], "]"}]}]}]}], "]"}]}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`tempBranch", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resBranch", "\[LeftDoubleBracket]", 
                    "#1", "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    "IPBenchmarks`Private`unsameBranch"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`tempMaster", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`resMaster", "\[LeftDoubleBracket]", 
                    "#1", "\[RightDoubleBracket]"}], "&"}], ")"}], "/@", 
                    "IPBenchmarks`Private`unsameMaster"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`unsameIssues", "=", 
                    RowBox[{"Function", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`issueNumber", ",", 
                    "IPBenchmarks`Private`type"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", "4", "}"}]}], "]"}], ",", 
                    RowBox[{
                    "IPBenchmarks`Private`tempBranch", "\[LeftDoubleBracket]",
                     "IPBenchmarks`Private`issueNumber", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`type", "===", "\<\"master\"\>"}], 
                    ",", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`tempMaster", "\[LeftDoubleBracket]",
                     "IPBenchmarks`Private`issueNumber", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"None", ",", 
                    RowBox[{"{", "4", "}"}]}], "]"}]}], "}"}], "]"}]}]}], 
                    "]"}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "IPBenchmarks`Private`resHeaders", ",", 
                    "IPBenchmarks`Private`temp"}], "}"}], "]"}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`temp", "\[LeftDoubleBracket]", "#1",
                     "\[RightDoubleBracket]"}], "]"}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Length", "[", "IPBenchmarks`Private`temp", "]"}],
                     "]"}]}]}], ";", 
                    RowBox[{"IPBenchmarks`Private`temp", "=", 
                    RowBox[{"Prepend", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`temp", ",", 
                    "IPBenchmarks`Private`headers"}], "]"}]}]}]}], "]"}]}], 
                    ";", 
                    RowBox[{"IPBenchmarks`Private`replacements", "=", 
                    RowBox[{"Join", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`sameIssues", "[", "#1", "]"}], 
                    "\[Rule]", 
                    RowBox[{"\<\"Issue \"\>", "<>", 
                    RowBox[{"ToString", "[", "#1", "]"}], "<>", "\<\"/\"\>", "<>", 
                    RowBox[{
                    "ToString", "[", "IPBenchmarks`Private`totalLength", 
                    "]"}]}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`sameIssuesPos", 
                    "]"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`unsameIssues", "[", 
                    RowBox[{"#1", ",", "\<\"branch\"\>"}], "]"}], "\[Rule]", 
                    RowBox[{"\<\"Issue \"\>", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#1", "+", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`sameIssuesPos", 
                    "]"}]}], "]"}], "<>", "\<\"/\"\>", "<>", 
                    RowBox[{
                    "ToString", "[", "IPBenchmarks`Private`totalLength", 
                    "]"}]}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`unsameBranch", "]"}],
                     "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IPBenchmarks`Private`unsameIssues", "[", 
                    RowBox[{"#1", ",", "\<\"master\"\>"}], "]"}], "\[Rule]", 
                    RowBox[{"\<\"Issue \"\>", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"#1", "+", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`sameIssuesPos", 
                    "]"}], "+", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`unsameBranch", 
                    "]"}]}], "]"}], "<>", "\<\"/\"\>", "<>", 
                    RowBox[{
                    "ToString", "[", "IPBenchmarks`Private`totalLength", 
                    "]"}]}]}], "&"}], ")"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{
                    "Length", "[", "IPBenchmarks`Private`unsameMaster", "]"}],
                     "]"}]}]}], "]"}]}], ";", 
                    RowBox[{
                    "IPBenchmarks`Private`showAutomaticIssuesSummarResults", 
                    "=", 
                    RowBox[{
                    "IPBenchmarks`Private`replacements", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"Column", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"PopupMenu", "[", 
                    RowBox[{
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`showAutomaticIssuesSummarResults", 
                    ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}], ",", "IPBenchmarks`Private`replacements", ",", 
                    RowBox[{
                    "Background", "\[Rule]", 
                    "IPBenchmarks`Private`$$backgroundColor"}]}], "]"}], ",", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{
                    RowBox[{
                    "IPBenchmarks`Private`constructComparisonGrid", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`showAutomaticIssuesSummarResults", 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"10", ",", "8", ",", "8"}], "}"}]}], "]"}], ",", 
                    RowBox[{"SynchronousUpdating", "\[Rule]", "False"}]}], 
                    "]"}]}], "}"}], ",", 
                    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}]}], 
                    "]"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{"FunctionAutomaticIssuesSummaryDifference", "[", 
                    RowBox[{
                    RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"Master\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`n_Association"}], ",", 
                    
                    RowBox[{"\<\"Branch\"\>", "\[Rule]", 
                    "IPBenchmarks`Private`o_Association"}]}], 
                    "\[RightAssociation]"}], ",", 
                    RowBox[{"IPBenchmarks`Private`opts", ":", 
                    RowBox[{
                    "OptionsPattern", "[", 
                    "IPBenchmarks`Extras`Sources`Internal`Definitions`Private`\
$$GenericOptions", "]"}]}]}], "]"}], ":=", 
                    RowBox[{"FunctionAutomaticIssuesSummaryDifference", "[", 
                    RowBox[{
                    "IPBenchmarks`Private`n", ",", "IPBenchmarks`Private`o", 
                    ",", "IPBenchmarks`Private`opts"}], "]"}]}]},
                    {
                    RowBox[{
                    RowBox[{
                    "FunctionAutomaticIssuesSummaryDifference", "[", "___", 
                    "]"}], ":=", 
                    RowBox[{
                    "IPBenchmarks`Private`failureFunctionSignature", 
                    "[", "\<\"IPBenchmarks`\
FunctionAutomaticIssuesSummaryDifference\"\>", "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    
                    "Tooltip"]& ], \
"\<\"IPBenchmarks`FunctionAutomaticIssuesSummaryDifference\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"FunctionAutomaticIssuesSummaryDifference[\\!\\(\\*\
StyleBox[\\\"master\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"branch\\\", \\\
\"TI\\\"]\\)]\\n\\tcompares \\!\\(\\*StyleBox[\\\"master\\\", \\\"TI\\\"]\\) \
and \\!\\(\\*StyleBox[\\\"branch\\\", \\\"TI\\\"]\\) in a form of Dataset \
object.\\n\\nArguments:\\n\\!\\(\\*TagBox[GridBox[{{\\\"\\\\\\\"\\\\\\\\!\\\\\
\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"master\\\\\\\\\\\\\\\", \\\\\\\\\\\\\\\
\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}, {\\\"\\\\\\\"\\\\\\\\!\
\\\\\\\\(\\\\\\\\*StyleBox[\\\\\\\\\\\\\\\"branch\\\\\\\\\\\\\\\", \\\\\\\\\\\
\\\\\"TI\\\\\\\\\\\\\\\"]\\\\\\\\)\\\\\\\"\\\", \\\"\\\\\\\"the copied result \
from chart plot in a form of association\\\\\\\"\\\"}}, \
Rule[GridBoxAlignment, List[Rule[\\\"Columns\\\", List[List[Left]]]]], \
Rule[AutoDelete, False], Rule[GridBoxItemSize, List[Rule[\\\"Columns\\\", \
List[List[Automatic]]], Rule[BaseStyle, List[Rule[ShowStringCharacters, \
True]]], Rule[\\\"Rows\\\", List[List[Automatic]]]]], Rule[GridBoxSpacings, \
List[Rule[\\\"Columns\\\", List[List[2]]]]]], \\\"Grid\\\"]\\)\"\>", 
             "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "FunctionAutomaticIssuesSummaryDifference[\!\(\*StyleBox[\"master\", \"TI\
\"]\), \!\(\*StyleBox[\"branch\", \"TI\"]\)]\n\tcompares \
\!\(\*StyleBox[\"master\", \"TI\"]\) and \!\(\*StyleBox[\"branch\", \"TI\"]\) \
in a form of Dataset object.\n\nArguments:\n\
\!\(\*TagBox[GridBox[{{\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"master\\\\\\\", \
\\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot in a \
form of association\\\"\"}, {\"\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"branch\\\\\
\\\", \\\\\\\"TI\\\\\\\"]\\\\)\\\"\", \"\\\"the copied result from chart plot \
in a form of association\\\"\"}}, Rule[GridBoxAlignment, \
List[Rule[\"Columns\", List[List[Left]]]]], Rule[AutoDelete, False], \
Rule[GridBoxItemSize, List[Rule[\"Columns\", List[List[Automatic]]], \
Rule[BaseStyle, List[Rule[ShowStringCharacters, True]]], Rule[\"Rows\", \
List[List[Automatic]]]]], Rule[GridBoxSpacings, List[Rule[\"Columns\", \
List[List[2]]]]]], \"Grid\"]\)", "Documentation" -> None, "OwnValues" -> None,
     "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, IPBenchmarks`FunctionAutomaticIssuesSummaryDifference, {
      IPBenchmarks`FunctionAutomaticIssuesSummaryDifference[
         Pattern[IPBenchmarks`Private`master, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`branch, 
          Blank[Association]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> Catch[
         DynamicModule[{
          IPBenchmarks`Private`headers = 
           Map[IPBenchmarks`Private`$$styleTitle[#]& , {
             "Issues", "Master", "Branch"}], IPBenchmarks`Private`resHeaders = 
           Map[IPBenchmarks`Private`$$styleText[#]& , {
             "Median input", "Median time (s)", "Issue input", 
              "Issue slowness (%)"}], IPBenchmarks`Private`resBranch, 
           IPBenchmarks`Private`resMaster, IPBenchmarks`Private`replacements, 
           IPBenchmarks`Private`showAutomaticIssuesSummarResults, 
           IPBenchmarks`Private`sameMaster, IPBenchmarks`Private`unsameMaster,
            IPBenchmarks`Private`sameBranch, 
           IPBenchmarks`Private`unsameBranch, 
           IPBenchmarks`Private`sameIssuesPos, 
           IPBenchmarks`Private`sameIssues, IPBenchmarks`Private`tempBranch, 
           IPBenchmarks`Private`tempMaster, IPBenchmarks`Private`totalLength},
           Map[IPBenchmarks`Private`validateIssuesComparisonFile[#]& , {
            IPBenchmarks`Private`master, IPBenchmarks`Private`branch}]; {
            IPBenchmarks`Private`resBranch, IPBenchmarks`Private`resMaster} = 
           Map[Replace[
              Values[#], Pattern[IPBenchmarks`Private`x, 
                Blank[Quantity]] :> 
              QuantityMagnitude[IPBenchmarks`Private`x], {-2}]& , {
             IPBenchmarks`Private`branch, IPBenchmarks`Private`master}]; {
            IPBenchmarks`Private`sameMaster, 
             IPBenchmarks`Private`unsameMaster} = Map[
             Function[IPBenchmarks`Private`trueFalse, 
              Flatten[
               Position[
                Map[MemberQ[
                  Part[IPBenchmarks`Private`resBranch, All, 3], 
                  Part[IPBenchmarks`Private`resMaster, #, 3]]& , 
                 Range[
                  Length[IPBenchmarks`Private`resMaster]]], 
                IPBenchmarks`Private`trueFalse]]], {True, False}]; 
          IPBenchmarks`Private`sameBranch = Flatten[
             Map[Position[
               Part[IPBenchmarks`Private`resBranch, All, 3], #]& , 
              Map[
              Part[IPBenchmarks`Private`resMaster, #, 3]& , 
               IPBenchmarks`Private`sameMaster]]]; 
          IPBenchmarks`Private`unsameBranch = Fold[DeleteCases, 
             Range[
              Length[IPBenchmarks`Private`resBranch]], 
             IPBenchmarks`Private`sameBranch]; 
          IPBenchmarks`Private`sameIssuesPos = 
           Transpose[{
             IPBenchmarks`Private`sameMaster, 
              IPBenchmarks`Private`sameBranch}]; 
          IPBenchmarks`Private`totalLength = Total[
             Map[
             Length, {
              IPBenchmarks`Private`sameIssuesPos, 
               IPBenchmarks`Private`unsameBranch, 
               IPBenchmarks`Private`unsameMaster}]]; 
          IPBenchmarks`Private`sameIssues = 
           Function[
            IPBenchmarks`Private`issueNumber, IPBenchmarks`Private`ls = ({
                Part[IPBenchmarks`Private`resMaster, #], 
                Part[IPBenchmarks`Private`resBranch, #2]}& )[
                Part[
                IPBenchmarks`Private`sameIssuesPos, 
                 IPBenchmarks`Private`issueNumber, 1], 
                Part[
                IPBenchmarks`Private`sameIssuesPos, 
                 IPBenchmarks`Private`issueNumber, 2]]; 
             IPBenchmarks`Private`ls = 
              Transpose[{IPBenchmarks`Private`resHeaders, 
                 Transpose[IPBenchmarks`Private`ls]}]; 
             IPBenchmarks`Private`ls = Map[Flatten[
                 Part[IPBenchmarks`Private`ls, #]]& , 
                Range[
                 Length[IPBenchmarks`Private`ls]]]; 
             IPBenchmarks`Private`ls = Map[
                IPBenchmarks`Private`$$styleTimeDifference[3], 
                IPBenchmarks`Private`ls]; 
             IPBenchmarks`Private`ls = 
              Prepend[IPBenchmarks`Private`ls, IPBenchmarks`Private`headers]]; 
          IPBenchmarks`Private`tempBranch = 
           Map[Part[IPBenchmarks`Private`resBranch, #]& , 
             IPBenchmarks`Private`unsameBranch]; 
          IPBenchmarks`Private`tempMaster = 
           Map[Part[IPBenchmarks`Private`resMaster, #]& , 
             IPBenchmarks`Private`unsameMaster]; 
          IPBenchmarks`Private`unsameIssues = 
           Function[{
             IPBenchmarks`Private`issueNumber, IPBenchmarks`Private`type}, 
             IPBenchmarks`Private`temp = Transpose[{
                 Table[None, {4}], 
                 Part[
                 IPBenchmarks`Private`tempBranch, 
                  IPBenchmarks`Private`issueNumber]}]; 
             If[IPBenchmarks`Private`type === "master", 
               IPBenchmarks`Private`temp = Transpose[{
                  Part[
                  IPBenchmarks`Private`tempMaster, 
                   IPBenchmarks`Private`issueNumber], 
                  Table[None, {4}]}]]; 
             IPBenchmarks`Private`temp = 
              Transpose[{
                IPBenchmarks`Private`resHeaders, IPBenchmarks`Private`temp}]; 
             IPBenchmarks`Private`temp = Map[Flatten[
                 Part[IPBenchmarks`Private`temp, #]]& , 
                Range[
                 Length[IPBenchmarks`Private`temp]]]; 
             IPBenchmarks`Private`temp = 
              Prepend[IPBenchmarks`Private`temp, 
                IPBenchmarks`Private`headers]]; 
          IPBenchmarks`Private`replacements = Join[
             Map[IPBenchmarks`Private`sameIssues[#] -> StringJoin["Issue ", 
                ToString[#], "/", 
                ToString[IPBenchmarks`Private`totalLength]]& , 
              Range[
               Length[IPBenchmarks`Private`sameIssuesPos]]], 
             Map[
             IPBenchmarks`Private`unsameIssues[#, "branch"] -> 
              StringJoin["Issue ", 
                ToString[# + Length[IPBenchmarks`Private`sameIssuesPos]], "/", 
                ToString[IPBenchmarks`Private`totalLength]]& , 
              Range[
               Length[IPBenchmarks`Private`unsameBranch]]], 
             Map[
             IPBenchmarks`Private`unsameIssues[#, "master"] -> 
              StringJoin["Issue ", 
                
                ToString[# + Length[IPBenchmarks`Private`sameIssuesPos] + 
                 Length[IPBenchmarks`Private`unsameBranch]], "/", 
                ToString[IPBenchmarks`Private`totalLength]]& , 
              Range[
               Length[IPBenchmarks`Private`unsameMaster]]]]; 
          IPBenchmarks`Private`showAutomaticIssuesSummarResults = 
           Part[IPBenchmarks`Private`replacements, 1, 1]; Column[{
             PopupMenu[
              Dynamic[
              IPBenchmarks`Private`showAutomaticIssuesSummarResults, 
               SynchronousUpdating -> False], 
              IPBenchmarks`Private`replacements, Background -> 
              IPBenchmarks`Private`$$backgroundColor], 
             Dynamic[
              IPBenchmarks`Private`constructComparisonGrid[
              IPBenchmarks`Private`showAutomaticIssuesSummarResults, {10, 8, 
               8}], SynchronousUpdating -> False]}, Alignment -> Center]]], 
       IPBenchmarks`FunctionAutomaticIssuesSummaryDifference[
         Association["Master" -> Pattern[IPBenchmarks`Private`n, 
            Blank[Association]], "Branch" -> Pattern[IPBenchmarks`Private`o, 
            Blank[Association]]], 
         Pattern[IPBenchmarks`Private`opts, 
          OptionsPattern[
          IPBenchmarks`Extras`Sources`Internal`Definitions`Private`$$\
GenericOptions]]] :> 
       IPBenchmarks`FunctionAutomaticIssuesSummaryDifference[
        IPBenchmarks`Private`n, IPBenchmarks`Private`o, 
         IPBenchmarks`Private`opts], 
       IPBenchmarks`FunctionAutomaticIssuesSummaryDifference[
         BlankNullSequence[]] :> 
       IPBenchmarks`Private`failureFunctionSignature[
        "IPBenchmarks`FunctionAutomaticIssuesSummaryDifference"]}], 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "IPBenchmarks`FunctionAutomaticIssuesSummaryDifference"], 
   False]]], "Output",
 CellChangeTimes->{3.819784652216358*^9, 3.8200593983249187`*^9, 
  3.82358319835921*^9, 3.8237550437634077`*^9, 3.8303178494296575`*^9, 
  3.8303180714091544`*^9, 3.830318203589619*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"73d0ef62-03d8-473d-a1b1-e3c6b5804393"]
}, Open  ]],

Cell["\<\
The function returns a dynamic grid for master and branch results comparison.\
\>", "Text",
 CellChangeTimes->{{3.819784657480102*^9, 3.819784659341325*^9}, {
  3.830318672947549*^9, 
  3.830318711023116*^9}},ExpressionUUID->"26e98269-5906-42f6-b80b-\
6bd31d7b38f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"master", "=", 
   InterpretationBox[
    DynamicModuleBox[{Typeset`open = False}, 
     TemplateBox[{"Association", "AssociationIcon", 
       GridBox[{{
          RowBox[{
            TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["Association", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["2", "IconizedItem"]}]}, {
          RowBox[{
            TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
            TagBox["8128", "IconizedItem"]}]}}, 
        GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
        "Column", 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
       Dynamic[Typeset`open]},
      "IconizedObject"]],
    Association[1 -> {
       Button[
        Tooltip["--Function Call--", Image[#, "Real32"]& ], 
        CopyToClipboard[
         ExpressionCell[
          Defer[
           With[{$CellContext`i$ = (Image[#, "Real32"]& )[
               Import[
                IconizedObject[
                "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
            (AlphaChannel[#]& )[$CellContext`i$]]], "Input"]], Appearance -> 
        None, Evaluator -> Automatic, Method -> "Queued"], 
       Quantity[0.0165355793387627, "Seconds"], 
       Button[
        Tooltip["--Function Call--", Image[#, "Bit"]& ], 
        CopyToClipboard[
         ExpressionCell[
          Defer[
           With[{$CellContext`i$ = (Image[#, "Bit"]& )[
               Import[
                IconizedObject[
                "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
            (AlphaChannel[#]& )[$CellContext`i$]]], "Input"]], Appearance -> 
        None, Evaluator -> Automatic, Method -> "Queued"], 
       Quantity[260, "Percent"]}, 2 -> {
       Button[
        Tooltip["--Function Call--", Image[#, Interleaving -> True]& ], 
        CopyToClipboard[
         ExpressionCell[
          Defer[
           With[{$CellContext`i$ = (Image[#, Interleaving -> True]& )[
               Import[
                IconizedObject[
                "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
            (AlphaChannel[#]& )[$CellContext`i$]]], "Input"]], Appearance -> 
        None, Evaluator -> Automatic, Method -> "Queued"], 
       Quantity[0.0010816287204377451`, "Seconds"], 
       Button[
        Tooltip["--Function Call--", Image[
          SetAlphaChannel[#, 0.5], Interleaving -> True]& ], 
        CopyToClipboard[
         ExpressionCell[
          Defer[
           With[{$CellContext`i$ = (Image[
               SetAlphaChannel[#, 0.5], Interleaving -> True]& )[
               Import[
                IconizedObject[
                "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
            (AlphaChannel[#]& )[$CellContext`i$]]], "Input"]], Appearance -> 
        None, Evaluator -> Automatic, Method -> "Queued"], 
       Quantity[366, "Percent"]}],
    SelectWithContents->True,
    Selectable->False]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"branch", "=", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Association", "AssociationIcon", 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Association", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Length: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["5", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["21728", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Association[1 -> {
        Button[
         Tooltip["--Function Call--", SetAlphaChannel[
           ColorConvert[#, "Grayscale"], 0.5]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (SetAlphaChannel[
                ColorConvert[#, "Grayscale"], 0.5]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[0.05178093352277081, "Seconds"], 
        Button[
         Tooltip["--Function Call--", ColorConvert[#, "LCH"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (ColorConvert[#, "LCH"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[426, "Percent"]}, 2 -> {
        Button[
         Tooltip["--Function Call--", SetAlphaChannel[
           ColorConvert[#, "Grayscale"], 0.5]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (SetAlphaChannel[
                ColorConvert[#, "Grayscale"], 0.5]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[0.05178093352277081, "Seconds"], 
        Button[
         Tooltip["--Function Call--", ColorConvert[#, "LAB"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (ColorConvert[#, "LAB"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[381, "Percent"]}, 3 -> {
        Button[
         Tooltip["--Function Call--", SetAlphaChannel[
           ColorConvert[#, "Grayscale"], 0.5]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (SetAlphaChannel[
                ColorConvert[#, "Grayscale"], 0.5]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[0.05178093352277081, "Seconds"], 
        Button[
         Tooltip["--Function Call--", ColorConvert[#, "LUV"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (ColorConvert[#, "LUV"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[365, "Percent"]}, 4 -> {
        Button[
         Tooltip["--Function Call--", SetAlphaChannel[
           ColorConvert[#, "Grayscale"], 0.5]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (SetAlphaChannel[
                ColorConvert[#, "Grayscale"], 0.5]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[0.05178093352277081, "Seconds"], 
        Button[
         Tooltip["--Function Call--", ColorConvert[#, "XYZ"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (ColorConvert[#, "XYZ"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[450, "Percent"]}, 5 -> {
        Button[
         Tooltip["--Function Call--", Image[#, "Bit"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (Image[#, "Bit"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[0.14899047629927334`, "Seconds"], 
        Button[
         Tooltip["--Function Call--", Image[#, "Real64"]& ], 
         CopyToClipboard[
          ExpressionCell[
           Defer[
            With[{$CellContext`i$ = (Image[#, "Real64"]& )[
                Import[
                 IconizedObject[
                 "C:\\Users\\Acer\\Documents\\ipbenchmarks\\Kernel\\Extras\\\
Sources\\Internal\\Example.jpg", "Example.jpg", Method -> Automatic]]]}, 
             (Blend[{#, #}]& )[$CellContext`i$]]], "Input"]], Appearance -> 
         None, Evaluator -> Automatic, Method -> "Queued"], 
        Quantity[114, "Percent"]}],
     SelectWithContents->True,
     Selectable->False]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"FunctionAutomaticIssuesSummaryDifference", "[", 
  RowBox[{"master", ",", "branch"}], "]"}]}], "Input",
 CellChangeTimes->{{3.823674316477084*^9, 3.823674318004919*^9}, {
   3.823674359596429*^9, 3.8236743629215107`*^9}, 3.823680165544031*^9, {
   3.823680655760372*^9, 3.823680660192957*^9}, 3.8236809519138737`*^9, {
   3.823681345535177*^9, 3.823681362642638*^9}, {3.823681423872552*^9, 
   3.823681425051014*^9}, {3.830317885411557*^9, 3.8303179135658607`*^9}, {
   3.830317949576007*^9, 3.8303179991973124`*^9}, {3.8303180465202436`*^9, 
   3.8303180739401965`*^9}, 3.830318104457472*^9, {3.8303181797475*^9, 
   3.8303182058550787`*^9}, {3.830318269520857*^9, 
   3.8303182871460357`*^9}},ExpressionUUID->"5056232d-8cdb-4479-ae8a-\
cba2010cf647"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9a24b125-f5de-4e6a-a690-9d0b9a24e553"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 265, 4, 96, "Title",ExpressionUUID->"23ceaabb-2fe6-4675-a3d3-2c5244c503bd"],
Cell[CellGroupData[{
Cell[870, 30, 218, 4, 53, "Subsection",ExpressionUUID->"41a19ad9-2730-4cca-816c-f4e236f891db"],
Cell[1091, 36, 1911, 43, 393, "Code",ExpressionUUID->"079ef288-33d6-4842-806f-e86f7f36c64e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3039, 84, 260, 4, 53, "Subsection",ExpressionUUID->"c486a2b6-c91b-497f-a705-678fe189873e"],
Cell[3302, 90, 176, 2, 28, "Input",ExpressionUUID->"23718748-a5d3-4a4c-9f79-5c2248f2c60a"],
Cell[3481, 94, 877, 15, 69, "Code",ExpressionUUID->"506bf4c8-a2b6-43f5-bdea-a18e6325eb6d"],
Cell[4361, 111, 2007, 48, 143, "Input",ExpressionUUID->"f9cd8b4c-f92f-4ea2-bc0c-5b05e1684bce"]
}, Closed]],
Cell[CellGroupData[{
Cell[6405, 164, 271, 4, 37, "Subsection",ExpressionUUID->"31ac0690-6b9e-407e-af46-3a5600e2ed62"],
Cell[CellGroupData[{
Cell[6701, 172, 205, 3, 28, "Input",ExpressionUUID->"840b45a3-5084-442d-b959-994b566cc72c"],
Cell[6909, 177, 11755, 285, 117, "Output",ExpressionUUID->"db917689-3df0-48f6-8522-d92b37b5c5c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18701, 467, 533, 8, 50, "Code",ExpressionUUID->"72ba571e-05c1-4323-adae-0edc8626a73e"],
Cell[19237, 477, 512, 7, 32, "Output",ExpressionUUID->"ca94a67b-da96-41aa-ae92-a972618133c2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19786, 489, 207, 3, 28, "Input",ExpressionUUID->"a3999c49-c651-4341-9eb2-9354ad9a9ea3"],
Cell[19996, 494, 10344, 254, 117, "Output",ExpressionUUID->"73f7d95c-eb54-47af-ba0a-a8a408906241"]
}, Open  ]],
Cell[30355, 751, 535, 8, 50, "Code",ExpressionUUID->"ba12563d-ab13-414e-a68a-ed42f8532b98"]
}, Closed]],
Cell[CellGroupData[{
Cell[30927, 764, 156, 3, 37, "Subsection",ExpressionUUID->"be803c3c-b252-4078-8693-a897edd956ca"],
Cell[31086, 769, 702, 13, 70, "Code",ExpressionUUID->"4ebc3216-5bd1-430d-90ad-9f6f824b4417"]
}, Closed]],
Cell[CellGroupData[{
Cell[31825, 787, 220, 4, 37, "Subsection",ExpressionUUID->"4d7dc469-24f9-46bd-9aea-f3049448593f"],
Cell[CellGroupData[{
Cell[32070, 795, 202, 3, 28, "Input",ExpressionUUID->"685e080a-23b5-4e13-9adc-42f8d05da451"],
Cell[32275, 800, 9241, 219, 171, "Output",ExpressionUUID->"1a257982-e652-4368-a06e-ac7405f00f24"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41553, 1024, 155, 3, 44, "Subsubsection",ExpressionUUID->"3cb26fe1-76c8-4e73-b13b-64effb46c0c3"],
Cell[CellGroupData[{
Cell[41733, 1031, 222, 4, 70, "Input",ExpressionUUID->"ff3d52e8-50cb-4215-ab07-4b08b55d14a0"],
Cell[41958, 1037, 21984, 486, 70, "Output",ExpressionUUID->"55c8e62a-d9ab-402e-9974-f210f88ae6c4"]
}, Open  ]],
Cell[63957, 1526, 223, 5, 70, "Text",ExpressionUUID->"58554f97-adbf-4e87-b9a5-7cd4428c6009"],
Cell[64183, 1533, 230, 4, 70, "Input",ExpressionUUID->"3cadd6e2-49bf-4c7c-b881-48e906f38b62"]
}, Closed]],
Cell[CellGroupData[{
Cell[64450, 1542, 182, 3, 36, "Subsubsection",ExpressionUUID->"284f5f53-5683-4835-a983-2b6b1ff65da0"],
Cell[CellGroupData[{
Cell[64657, 1549, 219, 3, 70, "Input",ExpressionUUID->"17671804-87cf-481f-a95b-5adc324436c2"],
Cell[64879, 1554, 15705, 345, 70, "Output",ExpressionUUID->"ba2deae0-b17b-4544-a794-3bd0748a387a"]
}, Open  ]],
Cell[80599, 1902, 294, 7, 70, "Text",ExpressionUUID->"c5ba2e56-dcd4-47a1-a55f-30d332f58c7b"],
Cell[80896, 1911, 872, 12, 70, "Input",ExpressionUUID->"c5896053-1bd9-41e7-808f-89370848b02c"],
Cell[81771, 1925, 333, 5, 70, "Input",ExpressionUUID->"01e7d36c-4624-4f43-8bcd-975d8c6a17bc"]
}, Closed]],
Cell[CellGroupData[{
Cell[82141, 1935, 160, 3, 36, "Subsubsection",ExpressionUUID->"a75f5612-5269-40b6-a7c3-70b9ff676780"],
Cell[CellGroupData[{
Cell[82326, 1942, 415, 6, 32, "Item",ExpressionUUID->"fb8e250f-c0a0-45de-bfc2-844a263945d7"],
Cell[CellGroupData[{
Cell[82766, 1952, 485, 10, 26, "Subitem",ExpressionUUID->"a3946ffb-fb42-490f-b6bf-1db25de02a59"],
Cell[83254, 1964, 530, 10, 26, "Subitem",ExpressionUUID->"9c154984-59ec-41c9-b122-bc39dd7c4e7d"],
Cell[83787, 1976, 697, 13, 26, "Subitem",ExpressionUUID->"1e6cffa9-de2d-460d-ace6-2149afd5314f"],
Cell[84487, 1991, 713, 13, 26, "Subitem",ExpressionUUID->"a5a15b70-8869-4aab-b0fa-b083691c1b11"]
}, Open  ]],
Cell[85215, 2007, 590, 9, 32, "Item",ExpressionUUID->"78820272-6dff-4894-b216-af364d79bdf3"],
Cell[CellGroupData[{
Cell[85830, 2020, 605, 9, 26, "Subitem",ExpressionUUID->"b610691d-5b7f-403f-b3a4-52d721f98d16"],
Cell[86438, 2031, 758, 12, 70, "Subitem",ExpressionUUID->"992e9f2d-b909-4d4e-ad24-f2b3043ab736"],
Cell[87199, 2045, 707, 10, 70, "Subitem",ExpressionUUID->"9072c936-56d4-41a3-961b-38d0d0559ba1"],
Cell[87909, 2057, 928, 16, 70, "Subitem",ExpressionUUID->"4e389766-c834-4312-bc56-db99a09b1fa2"],
Cell[CellGroupData[{
Cell[88862, 2077, 990, 17, 70, "Subsubitem",ExpressionUUID->"d79ea2e4-d319-4344-8f78-bb549c5b7050"],
Cell[89855, 2096, 894, 16, 70, "Subsubitem",ExpressionUUID->"01cea019-a42f-44a2-8e65-e0211f05efe4"],
Cell[90752, 2114, 969, 17, 70, "Subsubitem",ExpressionUUID->"1105bf6e-520f-4fb5-9a5e-1f8bd5b3229f"]
}, Open  ]],
Cell[91736, 2134, 906, 13, 70, "Subitem",ExpressionUUID->"c08b42bb-a939-4b30-955f-7724d959939d"],
Cell[92645, 2149, 1031, 18, 70, "Subitem",ExpressionUUID->"4abcdb55-5648-4e4f-8e34-a55afef0fd3e"],
Cell[93679, 2169, 1102, 18, 70, "Subitem",ExpressionUUID->"341bcb06-fcb3-41e6-aec1-b52ed8628b75"],
Cell[94784, 2189, 999, 14, 70, "Subitem",ExpressionUUID->"446702e4-2c5e-454c-b260-9cefedf39c88"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95832, 2209, 223, 3, 70, "Input",ExpressionUUID->"d5f525ef-494f-4d6e-af07-1f2627630785"],
Cell[96058, 2214, 15205, 339, 70, "Output",ExpressionUUID->"e42006ed-4637-460e-b005-bc39feeb8c82"]
}, Open  ]],
Cell[111278, 2556, 358, 8, 70, "Text",ExpressionUUID->"cd7c7df4-487a-42ca-8c89-8257b1e3165e"],
Cell[111639, 2566, 446, 7, 70, "Input",ExpressionUUID->"54cec25a-5891-4ad2-a3a6-99b6d7a7b27f"],
Cell[112088, 2575, 252, 4, 70, "Input",ExpressionUUID->"ac780785-c7e7-48be-ab33-671572832262"]
}, Closed]],
Cell[CellGroupData[{
Cell[112377, 2584, 248, 4, 36, "Subsubsection",ExpressionUUID->"1dd9ec98-f517-4b36-bcbc-75917617d4f9"],
Cell[CellGroupData[{
Cell[112650, 2592, 232, 4, 70, "Input",ExpressionUUID->"9163864b-f69f-42cd-827e-d4f7a1a0eaad"],
Cell[112885, 2598, 15613, 341, 70, "Output",ExpressionUUID->"39fe0b4b-997f-490c-a444-4e720b37939b"]
}, Open  ]],
Cell[128513, 2942, 274, 6, 70, "Text",ExpressionUUID->"719fe3a3-debc-44fd-a289-2be8a83ae7ce"],
Cell[128790, 2950, 231, 5, 70, "Input",ExpressionUUID->"70db2f68-9fa3-478a-8fde-226e1c4c57f2"]
}, Closed]],
Cell[CellGroupData[{
Cell[129058, 2960, 191, 3, 36, "Subsubsection",ExpressionUUID->"a84c2e3f-07ff-4d6b-923b-4aea3a218a91"],
Cell[CellGroupData[{
Cell[129274, 2967, 203, 3, 70, "Input",ExpressionUUID->"1a92ff79-abd3-428c-9991-054ad147f493"],
Cell[129480, 2972, 17665, 388, 70, "Output",ExpressionUUID->"8af9957f-cef4-40c0-bd94-5ce1e56218c1"]
}, Open  ]],
Cell[147160, 3363, 234, 6, 70, "Text",ExpressionUUID->"74fbaef8-a7c7-4a90-934c-b0eab7eec968"],
Cell[147397, 3371, 227, 5, 70, "Input",ExpressionUUID->"b0c892d5-402a-431c-aba7-ee32cb46408c"]
}, Closed]],
Cell[CellGroupData[{
Cell[147661, 3381, 227, 4, 36, "Subsubsection",ExpressionUUID->"703a59fe-fbde-45d2-8d9b-c88dc3979fc4"],
Cell[CellGroupData[{
Cell[147913, 3389, 239, 4, 70, "Input",ExpressionUUID->"6b3a4ef2-455e-42e5-b3ab-8885946fe415"],
Cell[148155, 3395, 28883, 609, 70, "Output",ExpressionUUID->"32f4f19e-77cf-49f8-a187-cc3b8ef51d03"]
}, Open  ]],
Cell[177053, 4007, 276, 6, 70, "Text",ExpressionUUID->"acc1cc75-34a4-4647-a3f4-b3f6f63b3e55"],
Cell[177332, 4015, 3640, 77, 70, "Input",ExpressionUUID->"13338dc8-7e12-46d4-9e40-dfd0447dda95"]
}, Closed]],
Cell[CellGroupData[{
Cell[181009, 4097, 238, 4, 36, "Subsubsection",ExpressionUUID->"d0673afd-1b04-493c-b837-ea038279e832"],
Cell[CellGroupData[{
Cell[181272, 4105, 270, 4, 70, "Input",ExpressionUUID->"06049bbc-9061-4753-9a70-025c2b71d76f"],
Cell[181545, 4111, 29037, 615, 70, "Output",ExpressionUUID->"ecdc5e44-4da4-4dc6-9348-054c728debfa"]
}, Open  ]],
Cell[210597, 4729, 276, 6, 70, "Text",ExpressionUUID->"e6bd9998-ae91-41ce-8937-cd5ed771b02e"],
Cell[210876, 4737, 5401, 106, 70, "Input",ExpressionUUID->"a75e8555-464a-4050-94b3-01ea39731bdc"]
}, Closed]],
Cell[CellGroupData[{
Cell[216314, 4848, 244, 4, 36, "Subsubsection",ExpressionUUID->"cfe402bf-06be-418b-8657-59b7d1cb43ce"],
Cell[CellGroupData[{
Cell[216583, 4856, 300, 4, 28, "Input",ExpressionUUID->"5151b269-f894-4975-963e-20f85514b278"],
Cell[216886, 4862, 40930, 856, 207, "Output",ExpressionUUID->"73d0ef62-03d8-473d-a1b1-e3c6b5804393"]
}, Open  ]],
Cell[257831, 5721, 276, 6, 34, "Text",ExpressionUUID->"26e98269-5906-42f6-b80b-6bd31d7b38f6"],
Cell[258110, 5729, 11613, 253, 77, "Input",ExpressionUUID->"5056232d-8cdb-4479-ae8a-cba2010cf647"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

